{
  "id": "i-LhBSmGn6AjytuGiCOTEz",
  "version": 3,
  "createdAt": 1560356004979,
  "updatedAt": 1560356172889,
  "tags": [
    "api-provider"
  ],
  "name": "api 1",
  "resources": [
    {
      "id": "i-LhBSk806AjytuGiCOTDz",
      "kind": "open-api"
    }
  ],
  "flows": [
    {
      "name": "List All names",
      "id": "i-LhBSk7z6AjytuGiCOT2z:flows:getnames",
      "steps": [
        {
          "id": "i-LhBSk7z6AjytuGiCOT3z",
          "configuredProperties": {
            "name": "getnames"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-start",
            "name": "Provided API",
            "description": "Start a Syndesis integration from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The operation ID as defined in the API spec",
                      "displayName": "Operation ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ],
              "componentScheme": "direct",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
              ]
            },
            "tags": [
              "expose"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "i-LhBSk8-6AjytuGiCOT4z",
          "configuredProperties": {
            "httpResponseCode": "501"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-end",
            "name": "Provided API Return Path",
            "description": "End action of Syndesis integrations that start from a provided API",
            "descriptor": {
              "inputDataShape": {
                "name": "Response",
                "description": "API response payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"body\":{\"type\":\"array\",\"items\":{\"type\":\"object\",\"description\":\"            \",\"properties\":{\"name\":{\"type\":\"string\"}},\"example\":\"{\\\"name\\\":\\\"gary\\\"}\"}}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "httpResponseCode": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The return code to set in the HTTP response",
                      "displayName": "Return Code",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string",
                      "enum": [
                        {
                          "label": "100 Continue",
                          "value": "100"
                        },
                        {
                          "label": "101 Switching Protocols",
                          "value": "101"
                        },
                        {
                          "label": "102 Processing",
                          "value": "102"
                        },
                        {
                          "label": "103 Early Hints",
                          "value": "103"
                        },
                        {
                          "label": "200 OK",
                          "value": "200"
                        },
                        {
                          "label": "201 Created",
                          "value": "201"
                        },
                        {
                          "label": "202 Accepted",
                          "value": "202"
                        },
                        {
                          "label": "203 Non-Authoritative Information",
                          "value": "203"
                        },
                        {
                          "label": "204 No Content",
                          "value": "204"
                        },
                        {
                          "label": "205 Reset Content",
                          "value": "205"
                        },
                        {
                          "label": "206 Partial Content",
                          "value": "206"
                        },
                        {
                          "label": "207 Multi-Status",
                          "value": "207"
                        },
                        {
                          "label": "208 Already Reported",
                          "value": "208"
                        },
                        {
                          "label": "226 IM Used",
                          "value": "226"
                        },
                        {
                          "label": "300 Multiple Choices",
                          "value": "300"
                        },
                        {
                          "label": "301 Moved Permanently",
                          "value": "301"
                        },
                        {
                          "label": "302 Found",
                          "value": "302"
                        },
                        {
                          "label": "303 See Other",
                          "value": "303"
                        },
                        {
                          "label": "304 Not Modified",
                          "value": "304"
                        },
                        {
                          "label": "305 Use Proxy",
                          "value": "305"
                        },
                        {
                          "label": "306 Switch Proxy",
                          "value": "306"
                        },
                        {
                          "label": "307 Temporary Redirect",
                          "value": "307"
                        },
                        {
                          "label": "308 Permanent Redirect",
                          "value": "308"
                        },
                        {
                          "label": "400 Bad Request",
                          "value": "400"
                        },
                        {
                          "label": "401 Unauthorized",
                          "value": "401"
                        },
                        {
                          "label": "402 Payment Required",
                          "value": "402"
                        },
                        {
                          "label": "403 Forbidden",
                          "value": "403"
                        },
                        {
                          "label": "404 Not Found",
                          "value": "404"
                        },
                        {
                          "label": "405 Method Not Allowed",
                          "value": "405"
                        },
                        {
                          "label": "406 Not Acceptable",
                          "value": "406"
                        },
                        {
                          "label": "407 Proxy Authentication Required",
                          "value": "407"
                        },
                        {
                          "label": "408 Request Timeout",
                          "value": "408"
                        },
                        {
                          "label": "409 Conflict",
                          "value": "409"
                        },
                        {
                          "label": "410 Gone",
                          "value": "410"
                        },
                        {
                          "label": "411 Length Required",
                          "value": "411"
                        },
                        {
                          "label": "412 Precondition Failed",
                          "value": "412"
                        },
                        {
                          "label": "413 Payload Too Large",
                          "value": "413"
                        },
                        {
                          "label": "414 URI Too Long",
                          "value": "414"
                        },
                        {
                          "label": "415 Unsupported Media Type",
                          "value": "415"
                        },
                        {
                          "label": "416 Range Not Satisfiable",
                          "value": "416"
                        },
                        {
                          "label": "417 Expectation Failed",
                          "value": "417"
                        },
                        {
                          "label": "418 I'm a teapot",
                          "value": "418"
                        },
                        {
                          "label": "421 Misdirected Request",
                          "value": "421"
                        },
                        {
                          "label": "422 Unprocessable Entity",
                          "value": "422"
                        },
                        {
                          "label": "423 Locked",
                          "value": "423"
                        },
                        {
                          "label": "424 Failed Dependency",
                          "value": "424"
                        },
                        {
                          "label": "426 Upgrade Required",
                          "value": "426"
                        },
                        {
                          "label": "428 Precondition Required",
                          "value": "428"
                        },
                        {
                          "label": "429 Too Many Requests",
                          "value": "429"
                        },
                        {
                          "label": "431 Request Header Fields Too Large",
                          "value": "431"
                        },
                        {
                          "label": "451 Unavailable For Legal Reasons",
                          "value": "451"
                        },
                        {
                          "label": "500 Internal Server Error",
                          "value": "500"
                        },
                        {
                          "label": "501 Not Implemented",
                          "value": "501"
                        },
                        {
                          "label": "502 Bad Gateway",
                          "value": "502"
                        },
                        {
                          "label": "503 Service Unavailable",
                          "value": "503"
                        },
                        {
                          "label": "504 Gateway Timeout",
                          "value": "504"
                        },
                        {
                          "label": "505 HTTP Version Not Supported",
                          "value": "505"
                        },
                        {
                          "label": "506 Variant Also Negotiates",
                          "value": "506"
                        },
                        {
                          "label": "507 Insufficient Storage",
                          "value": "507"
                        },
                        {
                          "label": "508 Loop Detected",
                          "value": "508"
                        },
                        {
                          "label": "510 Not Extended",
                          "value": "510"
                        },
                        {
                          "label": "511 Network Authentication Required",
                          "value": "511"
                        }
                      ]
                    }
                  }
                }
              ],
              "configuredProperties": {
                "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                "method": "process"
              },
              "componentScheme": "bean",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
              ]
            },
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "metadata": {
        "default-return-code": "200",
        "excerpt": "501 Not Implemented"
      },
      "type": "API_PROVIDER",
      "description": "GET /names"
    },
    {
      "name": "Create a name",
      "id": "i-LhBSk7z6AjytuGiCOT2z:flows:createname",
      "steps": [
        {
          "id": "i-LhBSk8-6AjytuGiCOT5z",
          "configuredProperties": {
            "name": "createname"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-start",
            "name": "Provided API",
            "description": "Start a Syndesis integration from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "name": "Request",
                "description": "API request payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"body\":{\"type\":\"object\",\"description\":\"            \",\"properties\":{\"name\":{\"type\":\"string\"}},\"example\":\"{\\\"name\\\":\\\"gary\\\"}\"}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The operation ID as defined in the API spec",
                      "displayName": "Operation ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ],
              "componentScheme": "direct",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
              ]
            },
            "tags": [
              "expose"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "i-LhBSk8-6AjytuGiCOT6z",
          "configuredProperties": {
            "httpResponseCode": "501"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-end",
            "name": "Provided API Return Path",
            "description": "End action of Syndesis integrations that start from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "httpResponseCode": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The return code to set in the HTTP response",
                      "displayName": "Return Code",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string",
                      "enum": [
                        {
                          "label": "100 Continue",
                          "value": "100"
                        },
                        {
                          "label": "101 Switching Protocols",
                          "value": "101"
                        },
                        {
                          "label": "102 Processing",
                          "value": "102"
                        },
                        {
                          "label": "103 Early Hints",
                          "value": "103"
                        },
                        {
                          "label": "200 OK",
                          "value": "200"
                        },
                        {
                          "label": "201 Created",
                          "value": "201"
                        },
                        {
                          "label": "202 Accepted",
                          "value": "202"
                        },
                        {
                          "label": "203 Non-Authoritative Information",
                          "value": "203"
                        },
                        {
                          "label": "204 No Content",
                          "value": "204"
                        },
                        {
                          "label": "205 Reset Content",
                          "value": "205"
                        },
                        {
                          "label": "206 Partial Content",
                          "value": "206"
                        },
                        {
                          "label": "207 Multi-Status",
                          "value": "207"
                        },
                        {
                          "label": "208 Already Reported",
                          "value": "208"
                        },
                        {
                          "label": "226 IM Used",
                          "value": "226"
                        },
                        {
                          "label": "300 Multiple Choices",
                          "value": "300"
                        },
                        {
                          "label": "301 Moved Permanently",
                          "value": "301"
                        },
                        {
                          "label": "302 Found",
                          "value": "302"
                        },
                        {
                          "label": "303 See Other",
                          "value": "303"
                        },
                        {
                          "label": "304 Not Modified",
                          "value": "304"
                        },
                        {
                          "label": "305 Use Proxy",
                          "value": "305"
                        },
                        {
                          "label": "306 Switch Proxy",
                          "value": "306"
                        },
                        {
                          "label": "307 Temporary Redirect",
                          "value": "307"
                        },
                        {
                          "label": "308 Permanent Redirect",
                          "value": "308"
                        },
                        {
                          "label": "400 Bad Request",
                          "value": "400"
                        },
                        {
                          "label": "401 Unauthorized",
                          "value": "401"
                        },
                        {
                          "label": "402 Payment Required",
                          "value": "402"
                        },
                        {
                          "label": "403 Forbidden",
                          "value": "403"
                        },
                        {
                          "label": "404 Not Found",
                          "value": "404"
                        },
                        {
                          "label": "405 Method Not Allowed",
                          "value": "405"
                        },
                        {
                          "label": "406 Not Acceptable",
                          "value": "406"
                        },
                        {
                          "label": "407 Proxy Authentication Required",
                          "value": "407"
                        },
                        {
                          "label": "408 Request Timeout",
                          "value": "408"
                        },
                        {
                          "label": "409 Conflict",
                          "value": "409"
                        },
                        {
                          "label": "410 Gone",
                          "value": "410"
                        },
                        {
                          "label": "411 Length Required",
                          "value": "411"
                        },
                        {
                          "label": "412 Precondition Failed",
                          "value": "412"
                        },
                        {
                          "label": "413 Payload Too Large",
                          "value": "413"
                        },
                        {
                          "label": "414 URI Too Long",
                          "value": "414"
                        },
                        {
                          "label": "415 Unsupported Media Type",
                          "value": "415"
                        },
                        {
                          "label": "416 Range Not Satisfiable",
                          "value": "416"
                        },
                        {
                          "label": "417 Expectation Failed",
                          "value": "417"
                        },
                        {
                          "label": "418 I'm a teapot",
                          "value": "418"
                        },
                        {
                          "label": "421 Misdirected Request",
                          "value": "421"
                        },
                        {
                          "label": "422 Unprocessable Entity",
                          "value": "422"
                        },
                        {
                          "label": "423 Locked",
                          "value": "423"
                        },
                        {
                          "label": "424 Failed Dependency",
                          "value": "424"
                        },
                        {
                          "label": "426 Upgrade Required",
                          "value": "426"
                        },
                        {
                          "label": "428 Precondition Required",
                          "value": "428"
                        },
                        {
                          "label": "429 Too Many Requests",
                          "value": "429"
                        },
                        {
                          "label": "431 Request Header Fields Too Large",
                          "value": "431"
                        },
                        {
                          "label": "451 Unavailable For Legal Reasons",
                          "value": "451"
                        },
                        {
                          "label": "500 Internal Server Error",
                          "value": "500"
                        },
                        {
                          "label": "501 Not Implemented",
                          "value": "501"
                        },
                        {
                          "label": "502 Bad Gateway",
                          "value": "502"
                        },
                        {
                          "label": "503 Service Unavailable",
                          "value": "503"
                        },
                        {
                          "label": "504 Gateway Timeout",
                          "value": "504"
                        },
                        {
                          "label": "505 HTTP Version Not Supported",
                          "value": "505"
                        },
                        {
                          "label": "506 Variant Also Negotiates",
                          "value": "506"
                        },
                        {
                          "label": "507 Insufficient Storage",
                          "value": "507"
                        },
                        {
                          "label": "508 Loop Detected",
                          "value": "508"
                        },
                        {
                          "label": "510 Not Extended",
                          "value": "510"
                        },
                        {
                          "label": "511 Network Authentication Required",
                          "value": "511"
                        }
                      ]
                    }
                  }
                }
              ],
              "configuredProperties": {
                "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                "method": "process"
              },
              "componentScheme": "bean",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
              ]
            },
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "metadata": {
        "default-return-code": "200",
        "excerpt": "501 Not Implemented"
      },
      "type": "API_PROVIDER",
      "description": "POST /names"
    },
    {
      "name": "Get a name",
      "id": "i-LhBSk7z6AjytuGiCOT2z:flows:getname",
      "steps": [
        {
          "id": "i-LhBSk8-6AjytuGiCOT7z",
          "configuredProperties": {
            "name": "getname"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-start",
            "name": "Provided API",
            "description": "Start a Syndesis integration from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "name": "Request",
                "description": "API request payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"nameId\":{\"type\":\"string\",\"title\":\"nameId\",\"description\":\"A unique identifier for a `name`.\"}}}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The operation ID as defined in the API spec",
                      "displayName": "Operation ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ],
              "componentScheme": "direct",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
              ]
            },
            "tags": [
              "expose"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "i-LhBSk8-6AjytuGiCOT8z",
          "configuredProperties": {
            "httpResponseCode": "501"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-end",
            "name": "Provided API Return Path",
            "description": "End action of Syndesis integrations that start from a provided API",
            "descriptor": {
              "inputDataShape": {
                "name": "Response",
                "description": "API response payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"body\":{\"type\":\"object\",\"description\":\"            \",\"properties\":{\"name\":{\"type\":\"string\"}},\"example\":\"{\\\"name\\\":\\\"gary\\\"}\"}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "httpResponseCode": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The return code to set in the HTTP response",
                      "displayName": "Return Code",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string",
                      "enum": [
                        {
                          "label": "100 Continue",
                          "value": "100"
                        },
                        {
                          "label": "101 Switching Protocols",
                          "value": "101"
                        },
                        {
                          "label": "102 Processing",
                          "value": "102"
                        },
                        {
                          "label": "103 Early Hints",
                          "value": "103"
                        },
                        {
                          "label": "200 OK",
                          "value": "200"
                        },
                        {
                          "label": "201 Created",
                          "value": "201"
                        },
                        {
                          "label": "202 Accepted",
                          "value": "202"
                        },
                        {
                          "label": "203 Non-Authoritative Information",
                          "value": "203"
                        },
                        {
                          "label": "204 No Content",
                          "value": "204"
                        },
                        {
                          "label": "205 Reset Content",
                          "value": "205"
                        },
                        {
                          "label": "206 Partial Content",
                          "value": "206"
                        },
                        {
                          "label": "207 Multi-Status",
                          "value": "207"
                        },
                        {
                          "label": "208 Already Reported",
                          "value": "208"
                        },
                        {
                          "label": "226 IM Used",
                          "value": "226"
                        },
                        {
                          "label": "300 Multiple Choices",
                          "value": "300"
                        },
                        {
                          "label": "301 Moved Permanently",
                          "value": "301"
                        },
                        {
                          "label": "302 Found",
                          "value": "302"
                        },
                        {
                          "label": "303 See Other",
                          "value": "303"
                        },
                        {
                          "label": "304 Not Modified",
                          "value": "304"
                        },
                        {
                          "label": "305 Use Proxy",
                          "value": "305"
                        },
                        {
                          "label": "306 Switch Proxy",
                          "value": "306"
                        },
                        {
                          "label": "307 Temporary Redirect",
                          "value": "307"
                        },
                        {
                          "label": "308 Permanent Redirect",
                          "value": "308"
                        },
                        {
                          "label": "400 Bad Request",
                          "value": "400"
                        },
                        {
                          "label": "401 Unauthorized",
                          "value": "401"
                        },
                        {
                          "label": "402 Payment Required",
                          "value": "402"
                        },
                        {
                          "label": "403 Forbidden",
                          "value": "403"
                        },
                        {
                          "label": "404 Not Found",
                          "value": "404"
                        },
                        {
                          "label": "405 Method Not Allowed",
                          "value": "405"
                        },
                        {
                          "label": "406 Not Acceptable",
                          "value": "406"
                        },
                        {
                          "label": "407 Proxy Authentication Required",
                          "value": "407"
                        },
                        {
                          "label": "408 Request Timeout",
                          "value": "408"
                        },
                        {
                          "label": "409 Conflict",
                          "value": "409"
                        },
                        {
                          "label": "410 Gone",
                          "value": "410"
                        },
                        {
                          "label": "411 Length Required",
                          "value": "411"
                        },
                        {
                          "label": "412 Precondition Failed",
                          "value": "412"
                        },
                        {
                          "label": "413 Payload Too Large",
                          "value": "413"
                        },
                        {
                          "label": "414 URI Too Long",
                          "value": "414"
                        },
                        {
                          "label": "415 Unsupported Media Type",
                          "value": "415"
                        },
                        {
                          "label": "416 Range Not Satisfiable",
                          "value": "416"
                        },
                        {
                          "label": "417 Expectation Failed",
                          "value": "417"
                        },
                        {
                          "label": "418 I'm a teapot",
                          "value": "418"
                        },
                        {
                          "label": "421 Misdirected Request",
                          "value": "421"
                        },
                        {
                          "label": "422 Unprocessable Entity",
                          "value": "422"
                        },
                        {
                          "label": "423 Locked",
                          "value": "423"
                        },
                        {
                          "label": "424 Failed Dependency",
                          "value": "424"
                        },
                        {
                          "label": "426 Upgrade Required",
                          "value": "426"
                        },
                        {
                          "label": "428 Precondition Required",
                          "value": "428"
                        },
                        {
                          "label": "429 Too Many Requests",
                          "value": "429"
                        },
                        {
                          "label": "431 Request Header Fields Too Large",
                          "value": "431"
                        },
                        {
                          "label": "451 Unavailable For Legal Reasons",
                          "value": "451"
                        },
                        {
                          "label": "500 Internal Server Error",
                          "value": "500"
                        },
                        {
                          "label": "501 Not Implemented",
                          "value": "501"
                        },
                        {
                          "label": "502 Bad Gateway",
                          "value": "502"
                        },
                        {
                          "label": "503 Service Unavailable",
                          "value": "503"
                        },
                        {
                          "label": "504 Gateway Timeout",
                          "value": "504"
                        },
                        {
                          "label": "505 HTTP Version Not Supported",
                          "value": "505"
                        },
                        {
                          "label": "506 Variant Also Negotiates",
                          "value": "506"
                        },
                        {
                          "label": "507 Insufficient Storage",
                          "value": "507"
                        },
                        {
                          "label": "508 Loop Detected",
                          "value": "508"
                        },
                        {
                          "label": "510 Not Extended",
                          "value": "510"
                        },
                        {
                          "label": "511 Network Authentication Required",
                          "value": "511"
                        }
                      ]
                    }
                  }
                }
              ],
              "configuredProperties": {
                "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                "method": "process"
              },
              "componentScheme": "bean",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
              ]
            },
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "metadata": {
        "default-return-code": "200",
        "excerpt": "501 Not Implemented"
      },
      "type": "API_PROVIDER",
      "description": "GET /names/{nameId}"
    },
    {
      "name": "Update a name",
      "id": "i-LhBSk7z6AjytuGiCOT2z:flows:updatename",
      "steps": [
        {
          "id": "i-LhBSk8-6AjytuGiCOT9z",
          "configuredProperties": {
            "name": "updatename"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-start",
            "name": "Provided API",
            "description": "Start a Syndesis integration from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "name": "Request",
                "description": "API request payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"nameId\":{\"type\":\"string\",\"title\":\"nameId\",\"description\":\"A unique identifier for a `name`.\"}}},\"body\":{\"type\":\"object\",\"description\":\"            \",\"properties\":{\"name\":{\"type\":\"string\"}},\"example\":\"{\\\"name\\\":\\\"gary\\\"}\"}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The operation ID as defined in the API spec",
                      "displayName": "Operation ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ],
              "componentScheme": "direct",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
              ]
            },
            "tags": [
              "expose"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "i-LhBSk8-6AjytuGiCOTAz",
          "configuredProperties": {
            "httpResponseCode": "501"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-end",
            "name": "Provided API Return Path",
            "description": "End action of Syndesis integrations that start from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "httpResponseCode": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The return code to set in the HTTP response",
                      "displayName": "Return Code",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string",
                      "enum": [
                        {
                          "label": "100 Continue",
                          "value": "100"
                        },
                        {
                          "label": "101 Switching Protocols",
                          "value": "101"
                        },
                        {
                          "label": "102 Processing",
                          "value": "102"
                        },
                        {
                          "label": "103 Early Hints",
                          "value": "103"
                        },
                        {
                          "label": "200 OK",
                          "value": "200"
                        },
                        {
                          "label": "201 Created",
                          "value": "201"
                        },
                        {
                          "label": "202 Accepted",
                          "value": "202"
                        },
                        {
                          "label": "203 Non-Authoritative Information",
                          "value": "203"
                        },
                        {
                          "label": "204 No Content",
                          "value": "204"
                        },
                        {
                          "label": "205 Reset Content",
                          "value": "205"
                        },
                        {
                          "label": "206 Partial Content",
                          "value": "206"
                        },
                        {
                          "label": "207 Multi-Status",
                          "value": "207"
                        },
                        {
                          "label": "208 Already Reported",
                          "value": "208"
                        },
                        {
                          "label": "226 IM Used",
                          "value": "226"
                        },
                        {
                          "label": "300 Multiple Choices",
                          "value": "300"
                        },
                        {
                          "label": "301 Moved Permanently",
                          "value": "301"
                        },
                        {
                          "label": "302 Found",
                          "value": "302"
                        },
                        {
                          "label": "303 See Other",
                          "value": "303"
                        },
                        {
                          "label": "304 Not Modified",
                          "value": "304"
                        },
                        {
                          "label": "305 Use Proxy",
                          "value": "305"
                        },
                        {
                          "label": "306 Switch Proxy",
                          "value": "306"
                        },
                        {
                          "label": "307 Temporary Redirect",
                          "value": "307"
                        },
                        {
                          "label": "308 Permanent Redirect",
                          "value": "308"
                        },
                        {
                          "label": "400 Bad Request",
                          "value": "400"
                        },
                        {
                          "label": "401 Unauthorized",
                          "value": "401"
                        },
                        {
                          "label": "402 Payment Required",
                          "value": "402"
                        },
                        {
                          "label": "403 Forbidden",
                          "value": "403"
                        },
                        {
                          "label": "404 Not Found",
                          "value": "404"
                        },
                        {
                          "label": "405 Method Not Allowed",
                          "value": "405"
                        },
                        {
                          "label": "406 Not Acceptable",
                          "value": "406"
                        },
                        {
                          "label": "407 Proxy Authentication Required",
                          "value": "407"
                        },
                        {
                          "label": "408 Request Timeout",
                          "value": "408"
                        },
                        {
                          "label": "409 Conflict",
                          "value": "409"
                        },
                        {
                          "label": "410 Gone",
                          "value": "410"
                        },
                        {
                          "label": "411 Length Required",
                          "value": "411"
                        },
                        {
                          "label": "412 Precondition Failed",
                          "value": "412"
                        },
                        {
                          "label": "413 Payload Too Large",
                          "value": "413"
                        },
                        {
                          "label": "414 URI Too Long",
                          "value": "414"
                        },
                        {
                          "label": "415 Unsupported Media Type",
                          "value": "415"
                        },
                        {
                          "label": "416 Range Not Satisfiable",
                          "value": "416"
                        },
                        {
                          "label": "417 Expectation Failed",
                          "value": "417"
                        },
                        {
                          "label": "418 I'm a teapot",
                          "value": "418"
                        },
                        {
                          "label": "421 Misdirected Request",
                          "value": "421"
                        },
                        {
                          "label": "422 Unprocessable Entity",
                          "value": "422"
                        },
                        {
                          "label": "423 Locked",
                          "value": "423"
                        },
                        {
                          "label": "424 Failed Dependency",
                          "value": "424"
                        },
                        {
                          "label": "426 Upgrade Required",
                          "value": "426"
                        },
                        {
                          "label": "428 Precondition Required",
                          "value": "428"
                        },
                        {
                          "label": "429 Too Many Requests",
                          "value": "429"
                        },
                        {
                          "label": "431 Request Header Fields Too Large",
                          "value": "431"
                        },
                        {
                          "label": "451 Unavailable For Legal Reasons",
                          "value": "451"
                        },
                        {
                          "label": "500 Internal Server Error",
                          "value": "500"
                        },
                        {
                          "label": "501 Not Implemented",
                          "value": "501"
                        },
                        {
                          "label": "502 Bad Gateway",
                          "value": "502"
                        },
                        {
                          "label": "503 Service Unavailable",
                          "value": "503"
                        },
                        {
                          "label": "504 Gateway Timeout",
                          "value": "504"
                        },
                        {
                          "label": "505 HTTP Version Not Supported",
                          "value": "505"
                        },
                        {
                          "label": "506 Variant Also Negotiates",
                          "value": "506"
                        },
                        {
                          "label": "507 Insufficient Storage",
                          "value": "507"
                        },
                        {
                          "label": "508 Loop Detected",
                          "value": "508"
                        },
                        {
                          "label": "510 Not Extended",
                          "value": "510"
                        },
                        {
                          "label": "511 Network Authentication Required",
                          "value": "511"
                        }
                      ]
                    }
                  }
                }
              ],
              "configuredProperties": {
                "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                "method": "process"
              },
              "componentScheme": "bean",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
              ]
            },
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "metadata": {
        "default-return-code": "200",
        "excerpt": "501 Not Implemented"
      },
      "type": "API_PROVIDER",
      "description": "PUT /names/{nameId}"
    },
    {
      "name": "Delete a name",
      "id": "i-LhBSk7z6AjytuGiCOT2z:flows:deletename",
      "steps": [
        {
          "id": "i-LhBSk8-6AjytuGiCOTBz",
          "configuredProperties": {
            "name": "deletename"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-start",
            "name": "Provided API",
            "description": "Start a Syndesis integration from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "name": "Request",
                "description": "API request payload",
                "kind": "json-schema",
                "specification": "{\"$schema\":\"http://json-schema.org/schema#\",\"type\":\"object\",\"$id\":\"io:syndesis:wrapped\",\"properties\":{\"parameters\":{\"type\":\"object\",\"properties\":{\"nameId\":{\"type\":\"string\",\"title\":\"nameId\",\"description\":\"A unique identifier for a `name`.\"}}}}}",
                "metadata": {
                  "unified": "true"
                }
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The operation ID as defined in the API spec",
                      "displayName": "Operation ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ],
              "componentScheme": "direct",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
              ]
            },
            "tags": [
              "expose"
            ],
            "actionType": "connector",
            "pattern": "From"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        },
        {
          "id": "i-LhBSk8-6AjytuGiCOTCz",
          "configuredProperties": {
            "httpResponseCode": "501"
          },
          "metadata": {
            "configured": "true"
          },
          "action": {
            "id": "io.syndesis:api-provider-end",
            "name": "Provided API Return Path",
            "description": "End action of Syndesis integrations that start from a provided API",
            "descriptor": {
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "none"
              },
              "propertyDefinitionSteps": [
                {
                  "name": "configuration",
                  "properties": {
                    "httpResponseCode": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The return code to set in the HTTP response",
                      "displayName": "Return Code",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "string",
                      "enum": [
                        {
                          "label": "100 Continue",
                          "value": "100"
                        },
                        {
                          "label": "101 Switching Protocols",
                          "value": "101"
                        },
                        {
                          "label": "102 Processing",
                          "value": "102"
                        },
                        {
                          "label": "103 Early Hints",
                          "value": "103"
                        },
                        {
                          "label": "200 OK",
                          "value": "200"
                        },
                        {
                          "label": "201 Created",
                          "value": "201"
                        },
                        {
                          "label": "202 Accepted",
                          "value": "202"
                        },
                        {
                          "label": "203 Non-Authoritative Information",
                          "value": "203"
                        },
                        {
                          "label": "204 No Content",
                          "value": "204"
                        },
                        {
                          "label": "205 Reset Content",
                          "value": "205"
                        },
                        {
                          "label": "206 Partial Content",
                          "value": "206"
                        },
                        {
                          "label": "207 Multi-Status",
                          "value": "207"
                        },
                        {
                          "label": "208 Already Reported",
                          "value": "208"
                        },
                        {
                          "label": "226 IM Used",
                          "value": "226"
                        },
                        {
                          "label": "300 Multiple Choices",
                          "value": "300"
                        },
                        {
                          "label": "301 Moved Permanently",
                          "value": "301"
                        },
                        {
                          "label": "302 Found",
                          "value": "302"
                        },
                        {
                          "label": "303 See Other",
                          "value": "303"
                        },
                        {
                          "label": "304 Not Modified",
                          "value": "304"
                        },
                        {
                          "label": "305 Use Proxy",
                          "value": "305"
                        },
                        {
                          "label": "306 Switch Proxy",
                          "value": "306"
                        },
                        {
                          "label": "307 Temporary Redirect",
                          "value": "307"
                        },
                        {
                          "label": "308 Permanent Redirect",
                          "value": "308"
                        },
                        {
                          "label": "400 Bad Request",
                          "value": "400"
                        },
                        {
                          "label": "401 Unauthorized",
                          "value": "401"
                        },
                        {
                          "label": "402 Payment Required",
                          "value": "402"
                        },
                        {
                          "label": "403 Forbidden",
                          "value": "403"
                        },
                        {
                          "label": "404 Not Found",
                          "value": "404"
                        },
                        {
                          "label": "405 Method Not Allowed",
                          "value": "405"
                        },
                        {
                          "label": "406 Not Acceptable",
                          "value": "406"
                        },
                        {
                          "label": "407 Proxy Authentication Required",
                          "value": "407"
                        },
                        {
                          "label": "408 Request Timeout",
                          "value": "408"
                        },
                        {
                          "label": "409 Conflict",
                          "value": "409"
                        },
                        {
                          "label": "410 Gone",
                          "value": "410"
                        },
                        {
                          "label": "411 Length Required",
                          "value": "411"
                        },
                        {
                          "label": "412 Precondition Failed",
                          "value": "412"
                        },
                        {
                          "label": "413 Payload Too Large",
                          "value": "413"
                        },
                        {
                          "label": "414 URI Too Long",
                          "value": "414"
                        },
                        {
                          "label": "415 Unsupported Media Type",
                          "value": "415"
                        },
                        {
                          "label": "416 Range Not Satisfiable",
                          "value": "416"
                        },
                        {
                          "label": "417 Expectation Failed",
                          "value": "417"
                        },
                        {
                          "label": "418 I'm a teapot",
                          "value": "418"
                        },
                        {
                          "label": "421 Misdirected Request",
                          "value": "421"
                        },
                        {
                          "label": "422 Unprocessable Entity",
                          "value": "422"
                        },
                        {
                          "label": "423 Locked",
                          "value": "423"
                        },
                        {
                          "label": "424 Failed Dependency",
                          "value": "424"
                        },
                        {
                          "label": "426 Upgrade Required",
                          "value": "426"
                        },
                        {
                          "label": "428 Precondition Required",
                          "value": "428"
                        },
                        {
                          "label": "429 Too Many Requests",
                          "value": "429"
                        },
                        {
                          "label": "431 Request Header Fields Too Large",
                          "value": "431"
                        },
                        {
                          "label": "451 Unavailable For Legal Reasons",
                          "value": "451"
                        },
                        {
                          "label": "500 Internal Server Error",
                          "value": "500"
                        },
                        {
                          "label": "501 Not Implemented",
                          "value": "501"
                        },
                        {
                          "label": "502 Bad Gateway",
                          "value": "502"
                        },
                        {
                          "label": "503 Service Unavailable",
                          "value": "503"
                        },
                        {
                          "label": "504 Gateway Timeout",
                          "value": "504"
                        },
                        {
                          "label": "505 HTTP Version Not Supported",
                          "value": "505"
                        },
                        {
                          "label": "506 Variant Also Negotiates",
                          "value": "506"
                        },
                        {
                          "label": "507 Insufficient Storage",
                          "value": "507"
                        },
                        {
                          "label": "508 Loop Detected",
                          "value": "508"
                        },
                        {
                          "label": "510 Not Extended",
                          "value": "510"
                        },
                        {
                          "label": "511 Network Authentication Required",
                          "value": "511"
                        }
                      ]
                    }
                  }
                }
              ],
              "configuredProperties": {
                "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                "method": "process"
              },
              "componentScheme": "bean",
              "connectorCustomizers": [
                "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
              ]
            },
            "actionType": "connector",
            "pattern": "To"
          },
          "connection": {
            "uses": 2,
            "id": "api-provider",
            "name": "API Provider",
            "metadata": {
              "hide-from-connection-pages": "true"
            },
            "connector": {
              "id": "api-provider",
              "version": 18,
              "actions": [
                {
                  "id": "io.syndesis:api-provider-start",
                  "name": "Provided API",
                  "description": "Start a Syndesis integration from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "none"
                    },
                    "outputDataShape": {
                      "kind": "any"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "name": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The operation ID as defined in the API spec",
                            "displayName": "Operation ID",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string"
                          }
                        },
                        "description": "API Provider Configuration"
                      }
                    ],
                    "componentScheme": "direct",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderStartEndpointCustomizer"
                    ]
                  },
                  "tags": [
                    "expose"
                  ],
                  "actionType": "connector",
                  "pattern": "From"
                },
                {
                  "id": "io.syndesis:api-provider-end",
                  "name": "Provided API Return Path",
                  "description": "End action of Syndesis integrations that start from a provided API",
                  "descriptor": {
                    "inputDataShape": {
                      "kind": "any"
                    },
                    "outputDataShape": {
                      "kind": "none"
                    },
                    "propertyDefinitionSteps": [
                      {
                        "name": "configuration",
                        "properties": {
                          "httpResponseCode": {
                            "componentProperty": false,
                            "deprecated": false,
                            "description": "The return code to set in the HTTP response",
                            "displayName": "Return Code",
                            "javaType": "String",
                            "kind": "parameter",
                            "required": true,
                            "secret": false,
                            "type": "string",
                            "enum": [
                              {
                                "label": "100 Continue",
                                "value": "100"
                              },
                              {
                                "label": "101 Switching Protocols",
                                "value": "101"
                              },
                              {
                                "label": "102 Processing",
                                "value": "102"
                              },
                              {
                                "label": "103 Early Hints",
                                "value": "103"
                              },
                              {
                                "label": "200 OK",
                                "value": "200"
                              },
                              {
                                "label": "201 Created",
                                "value": "201"
                              },
                              {
                                "label": "202 Accepted",
                                "value": "202"
                              },
                              {
                                "label": "203 Non-Authoritative Information",
                                "value": "203"
                              },
                              {
                                "label": "204 No Content",
                                "value": "204"
                              },
                              {
                                "label": "205 Reset Content",
                                "value": "205"
                              },
                              {
                                "label": "206 Partial Content",
                                "value": "206"
                              },
                              {
                                "label": "207 Multi-Status",
                                "value": "207"
                              },
                              {
                                "label": "208 Already Reported",
                                "value": "208"
                              },
                              {
                                "label": "226 IM Used",
                                "value": "226"
                              },
                              {
                                "label": "300 Multiple Choices",
                                "value": "300"
                              },
                              {
                                "label": "301 Moved Permanently",
                                "value": "301"
                              },
                              {
                                "label": "302 Found",
                                "value": "302"
                              },
                              {
                                "label": "303 See Other",
                                "value": "303"
                              },
                              {
                                "label": "304 Not Modified",
                                "value": "304"
                              },
                              {
                                "label": "305 Use Proxy",
                                "value": "305"
                              },
                              {
                                "label": "306 Switch Proxy",
                                "value": "306"
                              },
                              {
                                "label": "307 Temporary Redirect",
                                "value": "307"
                              },
                              {
                                "label": "308 Permanent Redirect",
                                "value": "308"
                              },
                              {
                                "label": "400 Bad Request",
                                "value": "400"
                              },
                              {
                                "label": "401 Unauthorized",
                                "value": "401"
                              },
                              {
                                "label": "402 Payment Required",
                                "value": "402"
                              },
                              {
                                "label": "403 Forbidden",
                                "value": "403"
                              },
                              {
                                "label": "404 Not Found",
                                "value": "404"
                              },
                              {
                                "label": "405 Method Not Allowed",
                                "value": "405"
                              },
                              {
                                "label": "406 Not Acceptable",
                                "value": "406"
                              },
                              {
                                "label": "407 Proxy Authentication Required",
                                "value": "407"
                              },
                              {
                                "label": "408 Request Timeout",
                                "value": "408"
                              },
                              {
                                "label": "409 Conflict",
                                "value": "409"
                              },
                              {
                                "label": "410 Gone",
                                "value": "410"
                              },
                              {
                                "label": "411 Length Required",
                                "value": "411"
                              },
                              {
                                "label": "412 Precondition Failed",
                                "value": "412"
                              },
                              {
                                "label": "413 Payload Too Large",
                                "value": "413"
                              },
                              {
                                "label": "414 URI Too Long",
                                "value": "414"
                              },
                              {
                                "label": "415 Unsupported Media Type",
                                "value": "415"
                              },
                              {
                                "label": "416 Range Not Satisfiable",
                                "value": "416"
                              },
                              {
                                "label": "417 Expectation Failed",
                                "value": "417"
                              },
                              {
                                "label": "418 I'm a teapot",
                                "value": "418"
                              },
                              {
                                "label": "421 Misdirected Request",
                                "value": "421"
                              },
                              {
                                "label": "422 Unprocessable Entity",
                                "value": "422"
                              },
                              {
                                "label": "423 Locked",
                                "value": "423"
                              },
                              {
                                "label": "424 Failed Dependency",
                                "value": "424"
                              },
                              {
                                "label": "426 Upgrade Required",
                                "value": "426"
                              },
                              {
                                "label": "428 Precondition Required",
                                "value": "428"
                              },
                              {
                                "label": "429 Too Many Requests",
                                "value": "429"
                              },
                              {
                                "label": "431 Request Header Fields Too Large",
                                "value": "431"
                              },
                              {
                                "label": "451 Unavailable For Legal Reasons",
                                "value": "451"
                              },
                              {
                                "label": "500 Internal Server Error",
                                "value": "500"
                              },
                              {
                                "label": "501 Not Implemented",
                                "value": "501"
                              },
                              {
                                "label": "502 Bad Gateway",
                                "value": "502"
                              },
                              {
                                "label": "503 Service Unavailable",
                                "value": "503"
                              },
                              {
                                "label": "504 Gateway Timeout",
                                "value": "504"
                              },
                              {
                                "label": "505 HTTP Version Not Supported",
                                "value": "505"
                              },
                              {
                                "label": "506 Variant Also Negotiates",
                                "value": "506"
                              },
                              {
                                "label": "507 Insufficient Storage",
                                "value": "507"
                              },
                              {
                                "label": "508 Loop Detected",
                                "value": "508"
                              },
                              {
                                "label": "510 Not Extended",
                                "value": "510"
                              },
                              {
                                "label": "511 Network Authentication Required",
                                "value": "511"
                              }
                            ]
                          }
                        },
                        "description": "API Provider Return Path Configuration"
                      }
                    ],
                    "configuredProperties": {
                      "beanName": "io.syndesis.connector.apiprovider.NoOpBean",
                      "method": "process"
                    },
                    "componentScheme": "bean",
                    "connectorCustomizers": [
                      "io.syndesis.connector.apiprovider.ApiProviderReturnPathCustomizer"
                    ]
                  },
                  "actionType": "connector",
                  "pattern": "To"
                }
              ],
              "name": "API Provider",
              "dependencies": [
                {
                  "type": "MAVEN",
                  "id": "io.syndesis.connector:connector-api-provider:1.8-SNAPSHOT"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-swagger-java:2.21.0.fuse-740028"
                },
                {
                  "type": "MAVEN",
                  "id": "org.apache.camel:camel-servlet-starter:2.21.0.fuse-740028"
                }
              ],
              "metadata": {
                "hide-from-connection-pages": "true"
              },
              "description": "Expose Restful APIs",
              "icon": "assets:api-provider.svg"
            },
            "connectorId": "api-provider",
            "icon": "assets:api-provider.svg",
            "description": "Expose Restful APIs",
            "isDerived": false
          },
          "stepKind": "endpoint"
        }
      ],
      "metadata": {
        "default-return-code": "200",
        "excerpt": "501 Not Implemented"
      },
      "type": "API_PROVIDER",
      "description": "DELETE /names/{nameId}"
    }
  ],
  "continuousDeliveryState": {
    "Paul": {
      "name": "Paul",
      "releaseTag": "i-LhtsmmAiUGJdbaf6EnIz",
      "lastTaggedAt": 1561118059658
    },
    "Production": {
      "name": "Production",
      "releaseTag": "i-LhtsmmAiUGJdbaf6EnJz",
      "lastTaggedAt": 1561118059658
    }
  },
  "currentState": "Unpublished",
  "targetState": "Published",
  "deployments": [
    {
      "id": "i-LhBSmGn6AjytuGiCOTEz:3",
      "version": 3,
      "createdAt": 1560367566144,
      "updatedAt": 1561655026080,
      "userId": "gaughan",
      "currentState": "Unpublished",
      "targetState": "Published",
      "stepsDone": {
        "buildv3": "172.30.39.149:5000/syndesis-staging/i-api-1:3"
      },
      "statusMessage": "Integration has still active deployments. Will retry shortly"
    },
    {
      "id": "i-LhBSmGn6AjytuGiCOTEz:2",
      "version": 2,
      "createdAt": 1560356173298,
      "updatedAt": 1560356437609,
      "userId": "gaughan",
      "currentState": "Unpublished",
      "targetState": "Unpublished",
      "stepsDone": {
        "buildv2": "172.30.39.149:5000/syndesis-staging/i-api-1:2"
      }
    },
    {
      "id": "i-LhBSmGn6AjytuGiCOTEz:1",
      "version": 1,
      "createdAt": 1560356005308,
      "updatedAt": 1560356179797,
      "userId": "gaughan",
      "currentState": "Unpublished",
      "targetState": "Unpublished",
      "stepsDone": {
        "buildv1": "172.30.39.149:5000/syndesis-staging/i-api-1:1"
      }
    }
  ],
  "board": {
    "id": "i-LhBSmKM6AjytuGiCOTFz",
    "metadata": {
      "integration-id": "i-LhBSmGn6AjytuGiCOTEz",
      "integration-version": "3"
    },
    "messages": [
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:getnames",
          "step": "i-LhBSk7z6AjytuGiCOT3z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:getnames",
          "step": "i-LhBSk8-6AjytuGiCOT4z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:createname",
          "step": "i-LhBSk8-6AjytuGiCOT5z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:createname",
          "step": "i-LhBSk8-6AjytuGiCOT6z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:getname",
          "step": "i-LhBSk8-6AjytuGiCOT7z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:getname",
          "step": "i-LhBSk8-6AjytuGiCOT8z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:updatename",
          "step": "i-LhBSk8-6AjytuGiCOT9z"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:updatename",
          "step": "i-LhBSk8-6AjytuGiCOTAz"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:deletename",
          "step": "i-LhBSk8-6AjytuGiCOTBz"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      },
      {
        "metadata": {
          "flow": "i-LhBSk7z6AjytuGiCOT2z:flows:deletename",
          "step": "i-LhBSk8-6AjytuGiCOTCz"
        },
        "level": "WARN",
        "code": "SYNDESIS011",
        "detail": "API Provider:Connection > API Provider:Connector$dependencies\n\t=> '[Dependenc ... 7-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n\t=> '[Dependenc ... 8-SNAPSHOT}, Dependency{type=MAVEN, id=org.apache.camel:camel-swagger- ...'\n"
      }
    ],
    "createdAt": 1560356005207,
    "updatedAt": 1560958012375,
    "targetResourceId": "i-LhBSmGn6AjytuGiCOTEz",
    "notices": 0,
    "warnings": 10,
    "errors": 0
  },
  "isDraft": true
}
