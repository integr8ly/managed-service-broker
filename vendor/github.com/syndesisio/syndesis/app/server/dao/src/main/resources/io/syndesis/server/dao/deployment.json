[
  {
    "data": {
      "configuredProperties": {
        "password": "@ENC:POSTGRESQL_SAMPLEDB_PASSWORD@",
        "schema": "sampledb",
        "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
        "user": "sampledb"
      },
      "connectorId": "sql",
      "description": "Connection to SampleDB",
      "icon": "assets:sql.svg",
      "id": "5",
      "name": "PostgresDB",
      "tags": [
        "sampledb"
      ]
    },
    "kind": "connection"
  },
  {
    "data": {
      "configuredProperties": {},
      "connectorId": "webhook",
      "description": "Create direct connections with external systems through Webhooks",
      "icon": "assets:webhook.svg",
      "id": "webhook",
      "metadata": {
        "hide-from-connection-pages": true
      },
      "name": "Webhook"
    },
    "kind": "connection"
  },
  {
    "data": {
      "connectorId": "timer",
      "description": "Trigger integration execution based on an interval or a cron expression",
      "icon": "assets:timer.svg",
      "id": "timer",
      "metadata": {
        "hide-from-connection-pages": true
      },
      "name": "Timer"
    },
    "kind": "connection"
  },
  {
    "data": {
      "connectorId": "log",
      "description": "Log the exchange with different options",
      "icon": "assets:log.svg",
      "id": "log",
      "metadata": {
        "hide-from-connection-pages": true
      },
      "name": "Log"
    },
    "kind": "connection"
  },
  {
    "data": {
      "connectorId": "flow",
      "description": "Connect with different flows using direct endpoint",
      "icon": "assets:flow.svg",
      "id": "flow",
      "metadata": {
        "hide-from-step-select": true,
        "hide-from-connection-pages": true
      },
      "name": "Flow"
    },
    "kind": "connection"
  },
  {
    "data": {
      "configuredProperties": {},
      "connectorId": "api-provider",
      "description": "Expose Restful APIs",
      "icon": "assets:api-provider.svg",
      "id": "api-provider",
      "metadata": {
        "hide-from-connection-pages": true
      },
      "name": "API Provider"
    },
    "kind": "connection"
  },
  {
    "data": {
      "configuredProperties": {},
      "connectorId": "knative",
      "description": "Send and receive cloud events using Knative resources",
      "icon": "assets:knative.svg",
      "id": "knative",
      "metadata": {
        "hide-from-connection-pages": true
      },
      "name": "Knative"
    },
    "kind": "connection",
    "condition": "#{getProperty('features.knative.enabled') == 'true'}"
  },
  {
    "data": {
      "componentScheme": "rest-swagger",
      "connectorGroup": {
        "id": "swagger-connector-template"
      },
      "connectorProperties": {
        "accessToken": {
          "componentProperty": true,
          "deprecated": false,
          "description": "OAuth Access token",
          "displayName": "OAuth Access token",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 4,
          "required": false,
          "secret": true,
          "tags": [
            "oauth-access-token"
          ],
          "type": "string"
        },
        "accessTokenExpiresAt": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Seconds in UTC when the access token expires",
          "displayName": "",
          "group": "producer",
          "javaType": "java.lang.Long",
          "kind": "property",
          "label": "producer",
          "required": false,
          "secret": false,
          "type": "hidden"
        },
        "authenticationParameterName": {
          "description": "Name of the API key parameter",
          "displayName": "API key parameter name",
          "javaType": "java.lang.String",
          "order": 2,
          "required": true,
          "type": "hidden"
        },
        "authenticationParameterPlacement": {
          "displayName": "Placement of the API key parameter",
          "enum": [
            {
              "label": "header",
              "value": "header"
            },
            {
              "label": "query",
              "value": "query"
            }
          ],
          "javaType": "java.lang.String",
          "order": 4,
          "required": true,
          "type": "hidden"
        },
        "authenticationParameterValue": {
          "description": "Value of the API key authentication parameter",
          "displayName": "API key",
          "javaType": "java.lang.String",
          "order": 3,
          "required": true,
          "secret": true,
          "type": "string"
        },
        "authenticationType": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Type of authentication used to connect to the API",
          "displayName": "Authentication Type",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 1,
          "required": false,
          "secret": false,
          "tags": [
            "authentication-type"
          ],
          "type": "hidden"
        },
        "authorizationEndpoint": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL for the start of the OAuth flow",
          "displayName": "OAuth Authorization Endpoint URL",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 6,
          "required": true,
          "secret": false,
          "tags": [
            "oauth-authorization-url"
          ],
          "type": "string"
        },
        "authorizeUsingParameters": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Should the implementation send client id and client secret when performing OAuth flow",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": false,
          "secret": false,
          "tags": [
            "oauth-authorize-using-parameters"
          ],
          "type": "hidden"
        },
        "basePath": {
          "componentProperty": true,
          "deprecated": false,
          "description": "API basePath for example /v2. Default is unset if set overrides the value present in OpenAPI document.",
          "displayName": "Base path",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 11,
          "required": true,
          "secret": false,
          "tags": [],
          "type": "string"
        },
        "clientId": {
          "componentProperty": true,
          "deprecated": false,
          "description": "OAuth Client ID, sometimes called Consumer Key",
          "displayName": "OAuth Client ID",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 2,
          "required": false,
          "secret": false,
          "tags": [
            "oauth-client-id"
          ],
          "type": "string"
        },
        "clientSecret": {
          "componentProperty": true,
          "deprecated": false,
          "description": "OAuth Client Secret, sometimes called Consumer Secret",
          "displayName": "OAuth Client Secret",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 3,
          "required": false,
          "secret": true,
          "tags": [
            "oauth-client-secret"
          ],
          "type": "string"
        },
        "host": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port.",
          "displayName": "Host",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 10,
          "required": true,
          "secret": false,
          "tags": [],
          "type": "string"
        },
        "oauthScopes": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL to fetch the OAuth Access token",
          "displayName": "OAuth Scopes",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 8,
          "required": false,
          "secret": false,
          "tags": [
            "oauth-scope"
          ],
          "type": "string"
        },
        "password": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Password to authenticate with",
          "displayName": "Password",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 3,
          "required": true,
          "secret": true,
          "type": "string"
        },
        "refreshToken": {
          "componentProperty": true,
          "deprecated": false,
          "description": "OAuth Refresh token",
          "displayName": "OAuth Refresh token",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 5,
          "required": false,
          "secret": true,
          "tags": [
            "oauth-refresh-token"
          ],
          "type": "string"
        },
        "refreshTokenRetryStatuses": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Comma separated list of HTTP statuses for which to refresh the OAuth access token using the refresh token",
          "displayName": "Specification",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": false,
          "secret": false,
          "type": "hidden"
        },
        "specification": {
          "componentProperty": true,
          "deprecated": false,
          "description": "OpenAPI document of the service",
          "displayName": "Document",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [
            "upload",
            "url"
          ],
          "type": "hidden"
        },
        "tokenEndpoint": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL to fetch the OAuth Access token",
          "displayName": "OAuth Token Endpoint URL",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 7,
          "required": false,
          "secret": false,
          "tags": [
            "oauth-access-token-url"
          ],
          "type": "string"
        },
        "tokenStrategy": {
          "componentProperty": true,
          "deprecated": false,
          "displayName": "OAuth Token strategy",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": false,
          "secret": false,
          "tags": [
            "oauth-token-strategy"
          ],
          "type": "hidden"
        },
        "username": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Username to authenticate with",
          "displayName": "Username",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "order": 2,
          "required": true,
          "secret": false,
          "type": "string"
        }
      },
      "description": "OpenAPI Connector",
      "icon": "fa-link",
      "id": "swagger-connector-template",
      "name": "OpenAPI Connector",
      "properties": {
        "authenticationType": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Type of authentication used to connect to the API",
          "displayName": "Authentication Type",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [
            "authentication-type"
          ],
          "type": "string"
        },
        "authorizationEndpoint": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL for the start of the OAuth flow",
          "displayName": "OAuth Authorization Endpoint URL",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [
            "oauth-authorization-url"
          ],
          "type": "string"
        },
        "basePath": {
          "componentProperty": true,
          "deprecated": false,
          "description": "API basePath for example /v2. Default is unset if set overrides the value present in OpenAPI document.",
          "displayName": "Base path",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [],
          "type": "string"
        },
        "host": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Scheme hostname and port to direct the HTTP requests to in the form of https://hostname:port.",
          "displayName": "Host",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [],
          "type": "string"
        },
        "oauthScopes": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL to fetch the OAuth Access token",
          "displayName": "OAuth Scopes",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": false,
          "secret": false,
          "tags": [
            "oauth-scope"
          ],
          "type": "string"
        },
        "specification": {
          "componentProperty": true,
          "deprecated": false,
          "description": "Upload the OpenAPI 2.0 file for your Custom API Client Connector. Custom API's are RESTful APIs and can be hosted anywhere, as long as a well-documented API is available and conforms to OpenAPI specification.",
          "displayName": "Document",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [
            "blob"
          ],
          "type": "file"
        },
        "tokenEndpoint": {
          "componentProperty": true,
          "deprecated": false,
          "description": "URL to fetch the OAuth Access token",
          "displayName": "OAuth Token Endpoint URL",
          "group": "producer",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "producer",
          "required": true,
          "secret": false,
          "tags": [
            "oauth-access-token-url"
          ],
          "type": "string"
        }
      }
    },
    "kind": "connector-template"
  }
]
