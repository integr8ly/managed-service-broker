{
    meta: {
        createdAt: '2019-08-19T10:58:01.131Z',
        host: 'https://syndesis-staging.b6ff.rh-idev.openshiftapps.com',
        resHumanReadable: true,
    },
    req: {
        url: '/api/v1/connections/i-LmdWeJSHdpg6ZYZNwxAz/actions/i-LkAI0ut-OrgXelAq8JAz:4babf99c-6287-47bb-862c-da7d053338af',
        method: 'POST',
        headers: {
            'sec-fetch-site': 'same-origin',
            'syndesis-mock-request': '19',
            'syndesis-mock-session': 'create-integration.spec.js',
            referrerpolicy: 'no-referrer',
            'sec-fetch-mode': 'cors',
            'x-forwarded-user': 'user',
        },
        body: 'e30=',
    },
    res: {
        status: 200,
        headers: {
            'access-control-allow-credentials': [
                'true',
            ],
            'access-control-allow-origin': [
                'http://localhost:3000',
            ],
            'cache-control': [
                'no-cache, no-store, max-age=0, must-revalidate, proxy-revalidate, s-maxage=0',
            ],
            'content-length': [
                '833',
            ],
            'content-type': [
                'application/json',
            ],
            date: [
                'Mon, 19 Aug 2019 10:58:01 GMT',
            ],
            'gap-auth': [
                'kahboom@cluster.local',
            ],
            'gap-upstream-address': [
                'syndesis-server',
            ],
            'strict-transport-security': [
                'max-age=31536000 ; includeSubDomains',
            ],
            'syndesis-xsrf-token': [
                'awesome',
            ],
            vary: [
                'Origin',
            ],
            'x-application-context': [
                'application',
            ],
            'x-content-type-options': [
                'nosniff',
            ],
            'x-frame-options': [
                'DENY',
            ],
            'x-xss-protection': [
                '1; mode=block',
            ],
            connection: [
                'close',
            ],
        },
        body: {
            inputDataShape: {
                kind: 'none',
            },
            outputDataShape: {
                name: 'Response',
                description: 'API response payload',
                kind: 'json-schema',
                specification: '{"$schema":"http://json-schema.org/schema#","type":"object","$id":"io:syndesis:wrapped","properties":{"body":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","title":"Task ID","description":"Unique task identifier"},"task":{"type":"string","title":"The task","description":"Task line"},"completed":{"type":"integer","title":"Task completition status","description":"0 - ongoing, 1 - completed","minimum":0,"maximum":1}}}}}}',
                metadata: {
                    unified: 'true',
                },
            },
            configuredProperties: {
                operationId: '4babf99c-6287-47bb-862c-da7d053338af',
            },
            connectorId: 'i-LkAI0ut-OrgXelAq8JAz',
            _meta: {},
        },
    },
}