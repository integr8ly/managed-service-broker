{
  "connections": {
    ":5": {
      "configuredProperties": {
        "password": "Â»ENC:a18045e3794e358ccfab47cdfcc55ac2dc96d8fb56443d5480a0bc1e88b2cff92f30777c337128789d1b7f34149ff1bd",
        "schema": "sampledb",
        "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
        "user": "sampledb"
      },
      "connector": {
        "actions": [
          {
            "actionType": "connector",
            "description": "Invoke SQL to obtain, store, update, or delete data.",
            "descriptor": {
              "componentScheme": "sql",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
              ],
              "inputDataShape": {
                "kind": "json-schema"
              },
              "outputDataShape": {
                "kind": "json-schema"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE.",
                  "name": "SQL statement",
                  "properties": {
                    "query": {
                      "deprecated": false,
                      "displayName": "SQL statement",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                      "placeholder": "for example ':#MYPARAMNAME'",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "id": "sql-connector",
            "name": "Invoke SQL",
            "pattern": "To",
            "tags": [
              "dynamic"
            ]
          },
          {
            "actionType": "connector",
            "description": "Periodically invoke SQL to obtain data.",
            "descriptor": {
              "componentScheme": "sql",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
              ],
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "json-schema"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Enter a SQL statement that returns results.",
                  "name": "SQL statement",
                  "properties": {
                    "query": {
                      "deprecated": false,
                      "displayName": "SQL statement",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "SQL statement to be executed.",
                      "order": 1,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    },
                    "schedulerExpression": {
                      "defaultValue": "60000",
                      "deprecated": false,
                      "displayName": "Period",
                      "group": "consumer",
                      "javaType": "long",
                      "kind": "parameter",
                      "labelHint": "Delay between scheduling (executing).",
                      "order": 2,
                      "required": false,
                      "secret": false,
                      "type": "duration"
                    }
                  }
                }
              ]
            },
            "id": "sql-start-connector",
            "name": "Periodic SQL invocation",
            "pattern": "From",
            "tags": [
              "dynamic"
            ]
          },
          {
            "actionType": "connector",
            "description": "Invoke a stored procedure.",
            "descriptor": {
              "componentScheme": "sql-stored",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
              ],
              "inputDataShape": {
                "kind": "json-schema"
              },
              "outputDataShape": {
                "kind": "json-schema"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Select the stored procedure.",
                  "name": "Procedure name",
                  "properties": {
                    "procedureName": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Procedure name",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "Name of the stored procedure.",
                      "required": false,
                      "secret": false,
                      "type": "string"
                    },
                    "template": {
                      "componentProperty": false,
                      "deprecated": false,
                      "displayName": "Template",
                      "group": "producer",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "Stored procedure template to perform.",
                      "required": false,
                      "secret": false,
                      "type": "hidden"
                    }
                  }
                }
              ]
            },
            "id": "sql-stored-connector",
            "name": "Invoke stored procedure",
            "pattern": "To",
            "tags": [
              "dynamic"
            ]
          },
          {
            "actionType": "connector",
            "description": "Periodically invoke a stored procedure.",
            "descriptor": {
              "componentScheme": "sql-stored",
              "connectorCustomizers": [
                "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
              ],
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "json-schema"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Select the stored procedure.",
                  "name": "Procedure name",
                  "properties": {
                    "procedureName": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Procedure name",
                      "group": "producer",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "Name of the stored procedure.",
                      "required": true,
                      "secret": false,
                      "type": "string"
                    },
                    "schedulerExpression": {
                      "defaultValue": "60000",
                      "deprecated": false,
                      "displayName": "Period",
                      "group": "consumer",
                      "javaType": "long",
                      "kind": "parameter",
                      "labelHint": "Delay between scheduling (executing).",
                      "required": false,
                      "secret": false,
                      "type": "duration"
                    },
                    "template": {
                      "componentProperty": false,
                      "deprecated": false,
                      "displayName": "Template",
                      "group": "producer",
                      "javaType": "java.lang.String",
                      "kind": "path",
                      "labelHint": "Stored Procedure template to perform.",
                      "required": true,
                      "secret": false,
                      "type": "hidden"
                    }
                  }
                }
              ]
            },
            "id": "sql-stored-start-connector",
            "name": "Periodic stored procedure invocation",
            "pattern": "From",
            "tags": [
              "dynamic"
            ]
          }
        ],
        "connectorCustomizers": [
          "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
        ],
        "dependencies": [
          {
            "id": "io.syndesis.connector:connector-sql:1.7-SNAPSHOT",
            "type": "MAVEN"
          },
          {
            "id": "jdbc-driver",
            "type": "EXTENSION_TAG"
          }
        ],
        "description": "Subscribe for and publish messages.",
        "icon": "assets:sql.svg",
        "id": "sql",
        "name": "Database",
        "properties": {
          "password": {
            "componentProperty": true,
            "deprecated": false,
            "displayName": "Password",
            "group": "security",
            "javaType": "java.lang.String",
            "kind": "property",
            "label": "common,security",
            "labelHint": "Password for the database connection.",
            "order": 3,
            "required": true,
            "secret": true,
            "type": "string"
          },
          "schema": {
            "componentProperty": true,
            "deprecated": false,
            "displayName": "Schema",
            "group": "common",
            "javaType": "java.lang.String",
            "kind": "property",
            "label": "common",
            "labelHint": "Database schema.",
            "order": 4,
            "required": false,
            "secret": false,
            "type": "string"
          },
          "url": {
            "componentProperty": true,
            "deprecated": false,
            "displayName": "Connection URL",
            "group": "common",
            "javaType": "java.lang.String",
            "kind": "property",
            "labelHint": "JDBC URL of the database.",
            "order": 1,
            "required": true,
            "secret": false,
            "type": "string"
          },
          "user": {
            "componentProperty": true,
            "deprecated": false,
            "displayName": "Username",
            "group": "common",
            "javaType": "java.lang.String",
            "kind": "property",
            "labelHint": "Username for the database connection.",
            "order": 2,
            "required": true,
            "secret": false,
            "type": "string"
          }
        },
        "tags": [
          "verifier"
        ],
        "version": 132
      },
      "connectorId": "sql",
      "description": "Connection to SampleDB",
      "icon": "assets:sql.svg",
      "id": "5",
      "isDerived": false,
      "name": "PostgresDB",
      "tags": [
        "sampledb"
      ],
      "uses": 0
    },
    ":flow": {
      "connector": {
        "actions": [
          {
            "actionType": "connector",
            "description": "Start a Syndesis integration flow",
            "descriptor": {
              "componentScheme": "direct",
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "any"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Flow start configuration",
                  "name": "configuration",
                  "properties": {
                    "name": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The flow identifier used to route messages to",
                      "displayName": "Flow ID",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "type": "hidden"
                    }
                  }
                }
              ]
            },
            "id": "io.syndesis:flow-start",
            "name": "Flow Start",
            "pattern": "From"
          },
          {
            "actionType": "connector",
            "description": "End action of Syndesis integrations flow",
            "descriptor": {
              "componentScheme": "bean",
              "configuredProperties": {
                "beanName": "io.syndesis.connector.flow.NoOpBean",
                "method": "process"
              },
              "inputDataShape": {
                "kind": "any"
              },
              "outputDataShape": {
                "kind": "none"
              }
            },
            "id": "io.syndesis:flow-end",
            "name": "Flow End",
            "pattern": "To"
          }
        ],
        "dependencies": [
          {
            "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
            "type": "MAVEN"
          }
        ],
        "description": "Connect with flows using direct endpoint",
        "icon": "assets:flow.svg",
        "id": "flow",
        "metadata": {
          "hide-from-connection-pages": "true",
          "hide-from-step-select": "true"
        },
        "name": "Flow",
        "version": 11
      },
      "connectorId": "flow",
      "description": "Connect with different flows using direct endpoint",
      "icon": "assets:flow.svg",
      "id": "flow",
      "isDerived": false,
      "metadata": {
        "hide-from-connection-pages": "true",
        "hide-from-step-select": "true"
      },
      "name": "Flow",
      "uses": 0
    },
    ":webhook": {
      "connector": {
        "actions": [
          {
            "actionType": "connector",
            "description": "Start an integration from a Webhook",
            "descriptor": {
              "componentScheme": "servlet",
              "configuredProperties": {
                "headerFilterStrategy": "syndesisHeaderStrategy",
                "httpMethodRestrict": "GET,POST"
              },
              "connectorCustomizers": [
                "io.syndesis.connector.webhook.WebhookConnectorCustomizer"
              ],
              "inputDataShape": {
                "kind": "none"
              },
              "outputDataShape": {
                "kind": "any"
              },
              "propertyDefinitionSteps": [
                {
                  "description": "Webhook Configuration",
                  "name": "configuration",
                  "properties": {
                    "contextPath": {
                      "componentProperty": false,
                      "deprecated": false,
                      "description": "The Webhook token that will be set as final part of the URL",
                      "displayName": "Webhook Token",
                      "generator": "alphanum:50",
                      "javaType": "String",
                      "kind": "parameter",
                      "required": true,
                      "secret": false,
                      "tags": [
                        "context-path"
                      ],
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "id": "io.syndesis:webhook-incoming",
            "metadata": {
              "serverBasePath": "/webhook"
            },
            "name": "Incoming Webhook",
            "pattern": "From",
            "tags": [
              "expose"
            ]
          }
        ],
        "dependencies": [
          {
            "id": "io.syndesis.connector:connector-webhook:1.7-SNAPSHOT",
            "type": "MAVEN"
          }
        ],
        "description": "Create direct connections with external systems through Webhooks",
        "icon": "assets:webhook.svg",
        "id": "webhook",
        "metadata": {
          "hide-from-connection-pages": "true"
        },
        "name": "Webhook",
        "version": 132
      },
      "connectorId": "webhook",
      "description": "Create direct connections with external systems through Webhooks",
      "icon": "assets:webhook.svg",
      "id": "webhook",
      "isDerived": false,
      "metadata": {
        "hide-from-connection-pages": "true"
      },
      "name": "Webhook",
      "uses": 0
    }
  },
  "connectors": {
    ":flow": {
      "actions": [
        {
          "actionType": "connector",
          "description": "Start a Syndesis integration flow",
          "descriptor": {
            "componentScheme": "direct",
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "any"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Flow start configuration",
                "name": "configuration",
                "properties": {
                  "name": {
                    "componentProperty": false,
                    "deprecated": false,
                    "description": "The flow identifier used to route messages to",
                    "displayName": "Flow ID",
                    "javaType": "String",
                    "kind": "parameter",
                    "required": true,
                    "secret": false,
                    "type": "hidden"
                  }
                }
              }
            ]
          },
          "id": "io.syndesis:flow-start",
          "name": "Flow Start",
          "pattern": "From"
        },
        {
          "actionType": "connector",
          "description": "End action of Syndesis integrations flow",
          "descriptor": {
            "componentScheme": "bean",
            "configuredProperties": {
              "beanName": "io.syndesis.connector.flow.NoOpBean",
              "method": "process"
            },
            "inputDataShape": {
              "kind": "any"
            },
            "outputDataShape": {
              "kind": "none"
            }
          },
          "id": "io.syndesis:flow-end",
          "name": "Flow End",
          "pattern": "To"
        }
      ],
      "dependencies": [
        {
          "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
          "type": "MAVEN"
        }
      ],
      "description": "Connect with flows using direct endpoint",
      "icon": "assets:flow.svg",
      "id": "flow",
      "metadata": {
        "hide-from-connection-pages": "true",
        "hide-from-step-select": "true"
      },
      "name": "Flow",
      "version": 11
    },
    ":sql": {
      "actions": [
        {
          "actionType": "connector",
          "description": "Invoke SQL to obtain, store, update, or delete data.",
          "descriptor": {
            "componentScheme": "sql",
            "connectorCustomizers": [
              "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
            ],
            "inputDataShape": {
              "kind": "json-schema"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE.",
                "name": "SQL statement",
                "properties": {
                  "query": {
                    "deprecated": false,
                    "displayName": "SQL statement",
                    "group": "common",
                    "javaType": "java.lang.String",
                    "kind": "path",
                    "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                    "placeholder": "for example ':#MYPARAMNAME'",
                    "required": true,
                    "secret": false,
                    "type": "string"
                  }
                }
              }
            ]
          },
          "id": "sql-connector",
          "name": "Invoke SQL",
          "pattern": "To",
          "tags": [
            "dynamic"
          ]
        },
        {
          "actionType": "connector",
          "description": "Periodically invoke SQL to obtain data.",
          "descriptor": {
            "componentScheme": "sql",
            "connectorCustomizers": [
              "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
            ],
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Enter a SQL statement that returns results.",
                "name": "SQL statement",
                "properties": {
                  "query": {
                    "deprecated": false,
                    "displayName": "SQL statement",
                    "group": "common",
                    "javaType": "java.lang.String",
                    "kind": "path",
                    "labelHint": "SQL statement to be executed.",
                    "order": 1,
                    "required": true,
                    "secret": false,
                    "type": "string"
                  },
                  "schedulerExpression": {
                    "defaultValue": "60000",
                    "deprecated": false,
                    "displayName": "Period",
                    "group": "consumer",
                    "javaType": "long",
                    "kind": "parameter",
                    "labelHint": "Delay between scheduling (executing).",
                    "order": 2,
                    "required": false,
                    "secret": false,
                    "type": "duration"
                  }
                }
              }
            ]
          },
          "id": "sql-start-connector",
          "name": "Periodic SQL invocation",
          "pattern": "From",
          "tags": [
            "dynamic"
          ]
        },
        {
          "actionType": "connector",
          "description": "Invoke a stored procedure.",
          "descriptor": {
            "componentScheme": "sql-stored",
            "connectorCustomizers": [
              "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
            ],
            "inputDataShape": {
              "kind": "json-schema"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Select the stored procedure.",
                "name": "Procedure name",
                "properties": {
                  "procedureName": {
                    "componentProperty": true,
                    "deprecated": false,
                    "displayName": "Procedure name",
                    "group": "common",
                    "javaType": "java.lang.String",
                    "kind": "property",
                    "labelHint": "Name of the stored procedure.",
                    "required": false,
                    "secret": false,
                    "type": "string"
                  },
                  "template": {
                    "componentProperty": false,
                    "deprecated": false,
                    "displayName": "Template",
                    "group": "producer",
                    "javaType": "java.lang.String",
                    "kind": "path",
                    "labelHint": "Stored procedure template to perform.",
                    "required": false,
                    "secret": false,
                    "type": "hidden"
                  }
                }
              }
            ]
          },
          "id": "sql-stored-connector",
          "name": "Invoke stored procedure",
          "pattern": "To",
          "tags": [
            "dynamic"
          ]
        },
        {
          "actionType": "connector",
          "description": "Periodically invoke a stored procedure.",
          "descriptor": {
            "componentScheme": "sql-stored",
            "connectorCustomizers": [
              "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
            ],
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "json-schema"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Select the stored procedure.",
                "name": "Procedure name",
                "properties": {
                  "procedureName": {
                    "componentProperty": true,
                    "deprecated": false,
                    "displayName": "Procedure name",
                    "group": "producer",
                    "javaType": "java.lang.String",
                    "kind": "path",
                    "labelHint": "Name of the stored procedure.",
                    "required": true,
                    "secret": false,
                    "type": "string"
                  },
                  "schedulerExpression": {
                    "defaultValue": "60000",
                    "deprecated": false,
                    "displayName": "Period",
                    "group": "consumer",
                    "javaType": "long",
                    "kind": "parameter",
                    "labelHint": "Delay between scheduling (executing).",
                    "required": false,
                    "secret": false,
                    "type": "duration"
                  },
                  "template": {
                    "componentProperty": false,
                    "deprecated": false,
                    "displayName": "Template",
                    "group": "producer",
                    "javaType": "java.lang.String",
                    "kind": "path",
                    "labelHint": "Stored Procedure template to perform.",
                    "required": true,
                    "secret": false,
                    "type": "hidden"
                  }
                }
              }
            ]
          },
          "id": "sql-stored-start-connector",
          "name": "Periodic stored procedure invocation",
          "pattern": "From",
          "tags": [
            "dynamic"
          ]
        }
      ],
      "connectorCustomizers": [
        "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
      ],
      "dependencies": [
        {
          "id": "io.syndesis.connector:connector-sql:1.7-SNAPSHOT",
          "type": "MAVEN"
        },
        {
          "id": "jdbc-driver",
          "type": "EXTENSION_TAG"
        }
      ],
      "description": "Subscribe for and publish messages.",
      "icon": "assets:sql.svg",
      "id": "sql",
      "name": "Database",
      "properties": {
        "password": {
          "componentProperty": true,
          "deprecated": false,
          "displayName": "Password",
          "group": "security",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "common,security",
          "labelHint": "Password for the database connection.",
          "order": 3,
          "required": true,
          "secret": true,
          "type": "string"
        },
        "schema": {
          "componentProperty": true,
          "deprecated": false,
          "displayName": "Schema",
          "group": "common",
          "javaType": "java.lang.String",
          "kind": "property",
          "label": "common",
          "labelHint": "Database schema.",
          "order": 4,
          "required": false,
          "secret": false,
          "type": "string"
        },
        "url": {
          "componentProperty": true,
          "deprecated": false,
          "displayName": "Connection URL",
          "group": "common",
          "javaType": "java.lang.String",
          "kind": "property",
          "labelHint": "JDBC URL of the database.",
          "order": 1,
          "required": true,
          "secret": false,
          "type": "string"
        },
        "user": {
          "componentProperty": true,
          "deprecated": false,
          "displayName": "Username",
          "group": "common",
          "javaType": "java.lang.String",
          "kind": "property",
          "labelHint": "Username for the database connection.",
          "order": 2,
          "required": true,
          "secret": false,
          "type": "string"
        }
      },
      "tags": [
        "verifier"
      ],
      "version": 132
    },
    ":webhook": {
      "actions": [
        {
          "actionType": "connector",
          "description": "Start an integration from a Webhook",
          "descriptor": {
            "componentScheme": "servlet",
            "configuredProperties": {
              "headerFilterStrategy": "syndesisHeaderStrategy",
              "httpMethodRestrict": "GET,POST"
            },
            "connectorCustomizers": [
              "io.syndesis.connector.webhook.WebhookConnectorCustomizer"
            ],
            "inputDataShape": {
              "kind": "none"
            },
            "outputDataShape": {
              "kind": "any"
            },
            "propertyDefinitionSteps": [
              {
                "description": "Webhook Configuration",
                "name": "configuration",
                "properties": {
                  "contextPath": {
                    "componentProperty": false,
                    "deprecated": false,
                    "description": "The Webhook token that will be set as final part of the URL",
                    "displayName": "Webhook Token",
                    "generator": "alphanum:50",
                    "javaType": "String",
                    "kind": "parameter",
                    "required": true,
                    "secret": false,
                    "tags": [
                      "context-path"
                    ],
                    "type": "string"
                  }
                }
              }
            ]
          },
          "id": "io.syndesis:webhook-incoming",
          "metadata": {
            "serverBasePath": "/webhook"
          },
          "name": "Incoming Webhook",
          "pattern": "From",
          "tags": [
            "expose"
          ]
        }
      ],
      "dependencies": [
        {
          "id": "io.syndesis.connector:connector-webhook:1.7-SNAPSHOT",
          "type": "MAVEN"
        }
      ],
      "description": "Create direct connections with external systems through Webhooks",
      "icon": "assets:webhook.svg",
      "id": "webhook",
      "metadata": {
        "hide-from-connection-pages": "true"
      },
      "name": "Webhook",
      "version": 132
    }
  },
  "integrations": {
    ":i-LhA2DmMkkzyaevLTNNLz": {
      "createdAt": 0,
      "flows": [
        {
          "id": "-LhA1eBF6jz-AhZCqHFp",
          "steps": [
            {
              "action": {
                "actionType": "connector",
                "description": "Start an integration from a Webhook",
                "descriptor": {
                  "componentScheme": "servlet",
                  "configuredProperties": {
                    "headerFilterStrategy": "syndesisHeaderStrategy",
                    "httpMethodRestrict": "GET,POST"
                  },
                  "connectorCustomizers": [
                    "io.syndesis.connector.webhook.WebhookConnectorCustomizer"
                  ],
                  "inputDataShape": {
                    "kind": "none"
                  },
                  "outputDataShape": {
                    "description": "A user specified data type",
                    "kind": "json-instance",
                    "metadata": {
                      "userDefined": "true"
                    },
                    "name": "Contact",
                    "specification": "{\"first_name\":\"John\",\"company\":\"Red Hat\"}"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "configuration",
                      "properties": {
                        "contextPath": {
                          "componentProperty": false,
                          "defaultValue": "aow39lzfwXe29zTm7u8DGgC6wB5JS3YjhjkKWaDWReww0vBWae",
                          "deprecated": false,
                          "description": "The Webhook token that will be set as final part of the URL",
                          "displayName": "Webhook Token",
                          "generator": "alphanum:50",
                          "javaType": "String",
                          "kind": "parameter",
                          "required": true,
                          "secret": false,
                          "tags": [
                            "context-path"
                          ],
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "id": "io.syndesis:webhook-incoming",
                "metadata": {
                  "serverBasePath": "/webhook"
                },
                "name": "Incoming Webhook",
                "pattern": "From",
                "tags": [
                  "expose"
                ]
              },
              "configuredProperties": {
                "contextPath": "test-webhook"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start an integration from a Webhook",
                      "descriptor": {
                        "componentScheme": "servlet",
                        "configuredProperties": {
                          "headerFilterStrategy": "syndesisHeaderStrategy",
                          "httpMethodRestrict": "GET,POST"
                        },
                        "connectorCustomizers": [
                          "io.syndesis.connector.webhook.WebhookConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Webhook Configuration",
                            "name": "configuration",
                            "properties": {
                              "contextPath": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The Webhook token that will be set as final part of the URL",
                                "displayName": "Webhook Token",
                                "generator": "alphanum:50",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "tags": [
                                  "context-path"
                                ],
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:webhook-incoming",
                      "metadata": {
                        "serverBasePath": "/webhook"
                      },
                      "name": "Incoming Webhook",
                      "pattern": "From",
                      "tags": [
                        "expose"
                      ]
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-webhook:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Create direct connections with external systems through Webhooks",
                  "icon": "assets:webhook.svg",
                  "id": "webhook",
                  "metadata": {
                    "hide-from-connection-pages": "true"
                  },
                  "name": "Webhook",
                  "version": 132
                },
                "connectorId": "webhook",
                "description": "Create direct connections with external systems through Webhooks",
                "icon": "assets:webhook.svg",
                "id": "webhook",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true"
                },
                "name": "Webhook",
                "uses": 0
              },
              "id": "-LhA1eyj6jz-AhZCqHFp",
              "metadata": {
                "configured": "true"
              },
              "stepKind": "endpoint"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false",
                "customText": "Start processing"
              },
              "id": "-LhA3bCv6jz-AhZCqHG5",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "description": "A user specified data type",
                    "kind": "json-instance",
                    "metadata": {
                      "userDefined": "true"
                    },
                    "name": "Contact",
                    "specification": "{\"first_name\":\"John\",\"company\":\"Red Hat\"}"
                  },
                  "outputDataShape": {
                    "kind": "any",
                    "name": "Any shape"
                  }
                }
              },
              "configuredProperties": {
                "default": "-LhA2IUo6jz-AhZCqHFt",
                "flows": "[{\"flow\":\"-LhA2Be96jz-AhZCqHFr\",\"condition\":\"${body.first_name} == 'John'\"},{\"flow\":\"-LhA2FmY6jz-AhZCqHFs\",\"condition\":\"${body.company} == 'Red Hat'\"}]",
                "routingScheme": "direct"
              },
              "id": "-LhA22YF6jz-AhZCqHFq",
              "metadata": {
                "configured": "true"
              },
              "name": "Conditional Flows",
              "stepKind": "choice"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false",
                "customText": "Finished processing"
              },
              "id": "-LhA1sGe6jz-AhZCqHFp",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            }
          ],
          "type": "PRIMARY"
        },
        {
          "description": "${body.first_name} == 'John'",
          "id": "-LhA2Be96jz-AhZCqHFr",
          "metadata": {
            "kind": "conditional",
            "primaryFlowId": "-LhA1eBF6jz-AhZCqHFp",
            "stepId": "-LhA22YF6jz-AhZCqHFq"
          },
          "name": "Conditional",
          "steps": [
            {
              "action": {
                "actionType": "connector",
                "description": "Start a Syndesis integration flow",
                "descriptor": {
                  "componentScheme": "direct",
                  "inputDataShape": {
                    "kind": "none"
                  },
                  "outputDataShape": {
                    "description": "A user specified data type",
                    "kind": "json-instance",
                    "metadata": {
                      "userDefined": "true"
                    },
                    "name": "Contact",
                    "specification": "{\"first_name\":\"John\",\"company\":\"Red Hat\"}"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "configuration",
                      "properties": {
                        "name": {
                          "componentProperty": false,
                          "deprecated": false,
                          "description": "The flow identifier used to route messages to",
                          "displayName": "Flow ID",
                          "javaType": "String",
                          "kind": "parameter",
                          "required": true,
                          "secret": false,
                          "type": "hidden"
                        }
                      }
                    }
                  ]
                },
                "id": "io.syndesis:flow-start",
                "name": "Flow Start",
                "pattern": "From"
              },
              "configuredProperties": {
                "name": "-LhA2Be96jz-AhZCqHFr"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2Beh6jz-AhZCqHFr",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow start",
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "any",
                    "name": "All preceding outputs"
                  },
                  "outputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "name": "Data Mapper (SQL Parameter)",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  }
                }
              },
              "configuredProperties": {
                "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2Beh6jz-AhZCqHFr\",\"uri\":\"atlas:json:-LhA2Beh6jz-AhZCqHFr\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2N6h6jz-AhZCqHFv\",\"uri\":\"atlas:json:-LhA2N6h6jz-AhZCqHFv\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Collection\",\"mappingType\":\"COLLECTION\",\"collectionType\":null,\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.911607\",\"inputField\":[{\"jsonType\":\"io.atlasmap.v2.ConstantField\",\"path\":\"/Drink beer with John\",\"fieldType\":\"STRING\",\"docId\":\"DOC.Constants.311422\",\"value\":\"Drink beer with John\"}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"task\",\"path\":\"/<>/task\",\"fieldType\":\"STRING\",\"docId\":\"-LhA2N6h6jz-AhZCqHFv\",\"userCreated\":false}]}]}}]},\"name\":\"UI.905871\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[{\"name\":\"Drink beer with John\",\"value\":\"Drink beer with John\",\"fieldType\":\"STRING\"}]},\"properties\":{\"property\":[]}}}"
              },
              "id": "-LhA2sks6jz-AhZCqHFx",
              "metadata": {
                "configured": "true"
              },
              "name": "Data Mapper",
              "stepKind": "mapper"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false"
              },
              "id": "-LhAJdzz6jz-AhZCqHG7",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "Invoke SQL to obtain, store, update, or delete data.",
                "descriptor": {
                  "componentScheme": "sql",
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                  ],
                  "inputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Parameter",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  },
                  "outputDataShape": {
                    "description": "Result of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Result",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true}}}}",
                    "type": "SQL_PARAM_OUT"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "SQL statement",
                      "properties": {
                        "query": {
                          "defaultValue": "insert into todo (task) values (:#task)",
                          "deprecated": false,
                          "displayName": "SQL statement",
                          "group": "common",
                          "javaType": "java.lang.String",
                          "kind": "path",
                          "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                          "placeholder": "for example ':#MYPARAMNAME'",
                          "required": true,
                          "secret": false,
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "id": "sql-connector",
                "name": "Invoke SQL",
                "pattern": "To",
                "tags": [
                  "dynamic"
                ]
              },
              "configuredProperties": {
                "query": "insert into todo (task) values (:#task)"
              },
              "connection": {
                "configuredProperties": {
                  "password": "Â»ENC:a18045e3794e358ccfab47cdfcc55ac2dc96d8fb56443d5480a0bc1e88b2cff92f30777c337128789d1b7f34149ff1bd",
                  "schema": "sampledb",
                  "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
                  "user": "sampledb"
                },
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Invoke SQL to obtain, store, update, or delete data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                                "placeholder": "for example ':#MYPARAMNAME'",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-connector",
                      "name": "Invoke SQL",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke SQL to obtain data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that returns results.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed.",
                                "order": 1,
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "order": 2,
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-start-connector",
                      "name": "Periodic SQL invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "property",
                                "labelHint": "Name of the stored procedure.",
                                "required": false,
                                "secret": false,
                                "type": "string"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored procedure template to perform.",
                                "required": false,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-connector",
                      "name": "Invoke stored procedure",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Name of the stored procedure.",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored Procedure template to perform.",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-start-connector",
                      "name": "Periodic stored procedure invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    }
                  ],
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-sql:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    },
                    {
                      "id": "jdbc-driver",
                      "type": "EXTENSION_TAG"
                    }
                  ],
                  "description": "Subscribe for and publish messages.",
                  "icon": "assets:sql.svg",
                  "id": "sql",
                  "name": "Database",
                  "properties": {
                    "password": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Password",
                      "group": "security",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common,security",
                      "labelHint": "Password for the database connection.",
                      "order": 3,
                      "required": true,
                      "secret": true,
                      "type": "string"
                    },
                    "schema": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Schema",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common",
                      "labelHint": "Database schema.",
                      "order": 4,
                      "required": false,
                      "secret": false,
                      "type": "string"
                    },
                    "url": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Connection URL",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "JDBC URL of the database.",
                      "order": 1,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    },
                    "user": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Username",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "Username for the database connection.",
                      "order": 2,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  },
                  "tags": [
                    "verifier"
                  ],
                  "version": 132
                },
                "connectorId": "sql",
                "description": "Connection to SampleDB",
                "icon": "assets:sql.svg",
                "id": "5",
                "isDerived": false,
                "name": "PostgresDB",
                "tags": [
                  "sampledb"
                ],
                "uses": 0
              },
              "id": "-LhA2N6h6jz-AhZCqHFv",
              "metadata": {
                "configured": "true"
              },
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "End action of Syndesis integrations flow",
                "descriptor": {
                  "componentScheme": "bean",
                  "configuredProperties": {
                    "beanName": "io.syndesis.connector.flow.NoOpBean",
                    "method": "process"
                  },
                  "inputDataShape": {
                    "kind": "any"
                  },
                  "outputDataShape": {
                    "kind": "none"
                  }
                },
                "id": "io.syndesis:flow-end",
                "name": "Flow End",
                "pattern": "To"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2Beh6jz-AhZCqHFs",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow end",
              "stepKind": "endpoint"
            }
          ],
          "type": "ALTERNATE"
        },
        {
          "description": "${body.company} == 'Red Hat'",
          "id": "-LhA2FmY6jz-AhZCqHFs",
          "metadata": {
            "kind": "conditional",
            "primaryFlowId": "-LhA1eBF6jz-AhZCqHFp",
            "stepId": "-LhA22YF6jz-AhZCqHFq"
          },
          "name": "Conditional",
          "steps": [
            {
              "action": {
                "actionType": "connector",
                "description": "Start a Syndesis integration flow",
                "descriptor": {
                  "componentScheme": "direct",
                  "inputDataShape": {
                    "kind": "none"
                  },
                  "outputDataShape": {
                    "description": "A user specified data type",
                    "kind": "json-instance",
                    "metadata": {
                      "userDefined": "true"
                    },
                    "name": "Contact",
                    "specification": "{\"first_name\":\"John\",\"company\":\"Red Hat\"}"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "configuration",
                      "properties": {
                        "name": {
                          "componentProperty": false,
                          "deprecated": false,
                          "description": "The flow identifier used to route messages to",
                          "displayName": "Flow ID",
                          "javaType": "String",
                          "kind": "parameter",
                          "required": true,
                          "secret": false,
                          "type": "hidden"
                        }
                      }
                    }
                  ]
                },
                "id": "io.syndesis:flow-start",
                "name": "Flow Start",
                "pattern": "From"
              },
              "configuredProperties": {
                "name": "-LhA2FmY6jz-AhZCqHFs"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2Fn-6jz-AhZCqHFs",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow start",
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "any",
                    "name": "All preceding outputs"
                  },
                  "outputDataShape": {
                    "kind": "json-schema",
                    "name": "Data Mapper (Template JSON Schema)",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"name\":{\"description\":\"Identifier for the symbol name\",\"type\":\"string\"}}}"
                  }
                }
              },
              "configuredProperties": {
                "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2Fn-6jz-AhZCqHFs\",\"uri\":\"atlas:json:-LhA2Fn-6jz-AhZCqHFs\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA34X56jz-AhZCqHFy\",\"uri\":\"atlas:json:-LhA34X56jz-AhZCqHFy\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.369767\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"first_name\",\"path\":\"/first_name\",\"fieldType\":\"STRING\",\"docId\":\"-LhA2Fn-6jz-AhZCqHFs\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"name\",\"path\":\"/name\",\"fieldType\":\"STRING\",\"docId\":\"-LhA34X56jz-AhZCqHFy\",\"userCreated\":false}]}]},\"name\":\"UI.145336\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[]},\"properties\":{\"property\":[]}}}"
              },
              "id": "-LhA3CWJ6jz-AhZCqHFz",
              "metadata": {
                "configured": "true"
              },
              "name": "Data Mapper",
              "stepKind": "mapper"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false"
              },
              "id": "-LhAJkKh6jz-AhZCqHG9",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "json-schema",
                    "name": "Template JSON Schema",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"name\":{\"description\":\"Identifier for the symbol name\",\"type\":\"string\"}}}"
                  },
                  "outputDataShape": {
                    "kind": "json-schema",
                    "name": "Template JSON Schema",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"message\":{\"description\":\"Identifier for the symbol message\",\"type\":\"string\"}}}"
                  }
                },
                "id": "-LhA3C1s6jz-AhZCqHFy",
                "name": "Templater"
              },
              "configuredProperties": {
                "language": "mustache",
                "template": "Meet {{name}} from Red Hat"
              },
              "id": "-LhA34X56jz-AhZCqHFy",
              "metadata": {
                "configured": "true"
              },
              "name": "Template",
              "stepKind": "template"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "any",
                    "name": "All preceding outputs"
                  },
                  "outputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "name": "Data Mapper (SQL Parameter)",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  }
                }
              },
              "configuredProperties": {
                "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2Fn-6jz-AhZCqHFs\",\"uri\":\"atlas:json:-LhA2Fn-6jz-AhZCqHFs\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3CWJ6jz-AhZCqHFz\",\"uri\":\"atlas:json:-LhA3CWJ6jz-AhZCqHFz\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA34X56jz-AhZCqHFy\",\"uri\":\"atlas:json:-LhA34X56jz-AhZCqHFy\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3EnM6jz-AhZCqHG-\",\"uri\":\"atlas:json:-LhA3EnM6jz-AhZCqHG-\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Collection\",\"mappingType\":\"COLLECTION\",\"collectionType\":null,\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.396283\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"message\",\"path\":\"/message\",\"fieldType\":\"STRING\",\"docId\":\"-LhA34X56jz-AhZCqHFy\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"task\",\"path\":\"/<>/task\",\"fieldType\":\"STRING\",\"docId\":\"-LhA3EnM6jz-AhZCqHG-\",\"userCreated\":false}]}]}}]},\"name\":\"UI.598464\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[]},\"properties\":{\"property\":[]}}}"
              },
              "id": "-LhA3H1c6jz-AhZCqHG0",
              "metadata": {
                "configured": "true"
              },
              "name": "Data Mapper",
              "stepKind": "mapper"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false"
              },
              "id": "-LhAJiLG6jz-AhZCqHG8",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "Invoke SQL to obtain, store, update, or delete data.",
                "descriptor": {
                  "componentScheme": "sql",
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                  ],
                  "inputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Parameter",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  },
                  "outputDataShape": {
                    "description": "Result of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Result",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true}}}}",
                    "type": "SQL_PARAM_OUT"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "SQL statement",
                      "properties": {
                        "query": {
                          "defaultValue": "insert into todo (task) values (:#task)",
                          "deprecated": false,
                          "displayName": "SQL statement",
                          "group": "common",
                          "javaType": "java.lang.String",
                          "kind": "path",
                          "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                          "placeholder": "for example ':#MYPARAMNAME'",
                          "required": true,
                          "secret": false,
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "id": "sql-connector",
                "name": "Invoke SQL",
                "pattern": "To",
                "tags": [
                  "dynamic"
                ]
              },
              "configuredProperties": {
                "query": "insert into todo (task) values (:#task)"
              },
              "connection": {
                "configuredProperties": {
                  "password": "Â»ENC:a18045e3794e358ccfab47cdfcc55ac2dc96d8fb56443d5480a0bc1e88b2cff92f30777c337128789d1b7f34149ff1bd",
                  "schema": "sampledb",
                  "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
                  "user": "sampledb"
                },
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Invoke SQL to obtain, store, update, or delete data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                                "placeholder": "for example ':#MYPARAMNAME'",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-connector",
                      "name": "Invoke SQL",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke SQL to obtain data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that returns results.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed.",
                                "order": 1,
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "order": 2,
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-start-connector",
                      "name": "Periodic SQL invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "property",
                                "labelHint": "Name of the stored procedure.",
                                "required": false,
                                "secret": false,
                                "type": "string"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored procedure template to perform.",
                                "required": false,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-connector",
                      "name": "Invoke stored procedure",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Name of the stored procedure.",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored Procedure template to perform.",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-start-connector",
                      "name": "Periodic stored procedure invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    }
                  ],
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-sql:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    },
                    {
                      "id": "jdbc-driver",
                      "type": "EXTENSION_TAG"
                    }
                  ],
                  "description": "Subscribe for and publish messages.",
                  "icon": "assets:sql.svg",
                  "id": "sql",
                  "name": "Database",
                  "properties": {
                    "password": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Password",
                      "group": "security",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common,security",
                      "labelHint": "Password for the database connection.",
                      "order": 3,
                      "required": true,
                      "secret": true,
                      "type": "string"
                    },
                    "schema": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Schema",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common",
                      "labelHint": "Database schema.",
                      "order": 4,
                      "required": false,
                      "secret": false,
                      "type": "string"
                    },
                    "url": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Connection URL",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "JDBC URL of the database.",
                      "order": 1,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    },
                    "user": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Username",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "Username for the database connection.",
                      "order": 2,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  },
                  "tags": [
                    "verifier"
                  ],
                  "version": 132
                },
                "connectorId": "sql",
                "description": "Connection to SampleDB",
                "icon": "assets:sql.svg",
                "id": "5",
                "isDerived": false,
                "name": "PostgresDB",
                "tags": [
                  "sampledb"
                ],
                "uses": 0
              },
              "id": "-LhA3EnM6jz-AhZCqHG-",
              "metadata": {
                "configured": "true"
              },
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "End action of Syndesis integrations flow",
                "descriptor": {
                  "componentScheme": "bean",
                  "configuredProperties": {
                    "beanName": "io.syndesis.connector.flow.NoOpBean",
                    "method": "process"
                  },
                  "inputDataShape": {
                    "kind": "any"
                  },
                  "outputDataShape": {
                    "kind": "none"
                  }
                },
                "id": "io.syndesis:flow-end",
                "name": "Flow End",
                "pattern": "To"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2Fn-6jz-AhZCqHFt",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow end",
              "stepKind": "endpoint"
            }
          ],
          "type": "ALTERNATE"
        },
        {
          "description": "Use this as default",
          "id": "-LhA2IUo6jz-AhZCqHFt",
          "metadata": {
            "kind": "default",
            "primaryFlowId": "-LhA1eBF6jz-AhZCqHFp",
            "stepId": "-LhA22YF6jz-AhZCqHFq"
          },
          "name": "Default",
          "steps": [
            {
              "action": {
                "actionType": "connector",
                "description": "Start a Syndesis integration flow",
                "descriptor": {
                  "componentScheme": "direct",
                  "inputDataShape": {
                    "kind": "none"
                  },
                  "outputDataShape": {
                    "description": "A user specified data type",
                    "kind": "json-instance",
                    "metadata": {
                      "userDefined": "true"
                    },
                    "name": "Contact",
                    "specification": "{\"first_name\":\"John\",\"company\":\"Red Hat\"}"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "configuration",
                      "properties": {
                        "name": {
                          "componentProperty": false,
                          "deprecated": false,
                          "description": "The flow identifier used to route messages to",
                          "displayName": "Flow ID",
                          "javaType": "String",
                          "kind": "parameter",
                          "required": true,
                          "secret": false,
                          "type": "hidden"
                        }
                      }
                    }
                  ]
                },
                "id": "io.syndesis:flow-start",
                "name": "Flow Start",
                "pattern": "From"
              },
              "configuredProperties": {
                "name": "-LhA2IUo6jz-AhZCqHFt"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2IV36jz-AhZCqHFt",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow start",
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "any",
                    "name": "All preceding outputs"
                  },
                  "outputDataShape": {
                    "kind": "json-schema",
                    "name": "Data Mapper (Template JSON Schema)",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"name\":{\"description\":\"Identifier for the symbol name\",\"type\":\"string\"},\"company\":{\"description\":\"Identifier for the symbol company\",\"type\":\"string\"}}}"
                  }
                }
              },
              "configuredProperties": {
                "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2IV36jz-AhZCqHFt\",\"uri\":\"atlas:json:-LhA2IV36jz-AhZCqHFt\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3L4D6jz-AhZCqHG1\",\"uri\":\"atlas:json:-LhA3L4D6jz-AhZCqHG1\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.390521\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"company\",\"path\":\"/company\",\"fieldType\":\"STRING\",\"docId\":\"-LhA2IV36jz-AhZCqHFt\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"company\",\"path\":\"/company\",\"fieldType\":\"STRING\",\"docId\":\"-LhA3L4D6jz-AhZCqHG1\",\"userCreated\":false}]},{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.180358\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"first_name\",\"path\":\"/first_name\",\"fieldType\":\"STRING\",\"docId\":\"-LhA2IV36jz-AhZCqHFt\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"name\",\"path\":\"/name\",\"fieldType\":\"STRING\",\"docId\":\"-LhA3L4D6jz-AhZCqHG1\",\"userCreated\":false}]}]},\"name\":\"UI.238912\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[]},\"properties\":{\"property\":[]}}}"
              },
              "id": "-LhA3Tub6jz-AhZCqHG2",
              "metadata": {
                "configured": "true"
              },
              "name": "Data Mapper",
              "stepKind": "mapper"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false"
              },
              "id": "-LhAJmQo6jz-AhZCqHGA",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "json-schema",
                    "name": "Template JSON Schema",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"name\":{\"description\":\"Identifier for the symbol name\",\"type\":\"string\"},\"company\":{\"description\":\"Identifier for the symbol company\",\"type\":\"string\"}}}"
                  },
                  "outputDataShape": {
                    "kind": "json-schema",
                    "name": "Template JSON Schema",
                    "specification": "{\"type\":\"object\",\"$schema\":\"http://json-schema.org/schema#\",\"title\":\"Template JSON Schema\",\"properties\":{\"message\":{\"description\":\"Identifier for the symbol message\",\"type\":\"string\"}}}"
                  }
                },
                "id": "-LhA3S_T6jz-AhZCqHG1",
                "name": "Templater"
              },
              "configuredProperties": {
                "language": "mustache",
                "template": "Drink coffee with {{name}} from {{company}}"
              },
              "id": "-LhA3L4D6jz-AhZCqHG1",
              "metadata": {
                "configured": "true"
              },
              "name": "Template",
              "stepKind": "template"
            },
            {
              "action": {
                "actionType": "step",
                "descriptor": {
                  "inputDataShape": {
                    "kind": "any",
                    "name": "All preceding outputs"
                  },
                  "outputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "name": "Data Mapper (SQL Parameter)",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  }
                }
              },
              "configuredProperties": {
                "atlasmapping": "{\"AtlasMapping\":{\"jsonType\":\"io.atlasmap.v2.AtlasMapping\",\"dataSource\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA2IV36jz-AhZCqHFt\",\"uri\":\"atlas:json:-LhA2IV36jz-AhZCqHFt\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3Tub6jz-AhZCqHG2\",\"uri\":\"atlas:json:-LhA3Tub6jz-AhZCqHG2\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3L4D6jz-AhZCqHG1\",\"uri\":\"atlas:json:-LhA3L4D6jz-AhZCqHG1\",\"dataSourceType\":\"SOURCE\"},{\"jsonType\":\"io.atlasmap.json.v2.JsonDataSource\",\"id\":\"-LhA3VmE6jz-AhZCqHG3\",\"uri\":\"atlas:json:-LhA3VmE6jz-AhZCqHG3\",\"dataSourceType\":\"TARGET\",\"template\":null}],\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Collection\",\"mappingType\":\"COLLECTION\",\"collectionType\":null,\"mappings\":{\"mapping\":[{\"jsonType\":\"io.atlasmap.v2.Mapping\",\"id\":\"mapping.200290\",\"inputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"message\",\"path\":\"/message\",\"fieldType\":\"STRING\",\"docId\":\"-LhA3L4D6jz-AhZCqHG1\",\"userCreated\":false}],\"outputField\":[{\"jsonType\":\"io.atlasmap.json.v2.JsonField\",\"name\":\"task\",\"path\":\"/<>/task\",\"fieldType\":\"STRING\",\"docId\":\"-LhA3VmE6jz-AhZCqHG3\",\"userCreated\":false}]}]}}]},\"name\":\"UI.647490\",\"lookupTables\":{\"lookupTable\":[]},\"constants\":{\"constant\":[]},\"properties\":{\"property\":[]}}}"
              },
              "id": "-LhA3XGK6jz-AhZCqHG4",
              "metadata": {
                "configured": "true"
              },
              "name": "Data Mapper",
              "stepKind": "mapper"
            },
            {
              "configuredProperties": {
                "bodyLoggingEnabled": "true",
                "contextLoggingEnabled": "false"
              },
              "id": "-LhAJn_76jz-AhZCqHGB",
              "metadata": {
                "configured": "true"
              },
              "name": "Log",
              "stepKind": "log"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "Invoke SQL to obtain, store, update, or delete data.",
                "descriptor": {
                  "componentScheme": "sql",
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                  ],
                  "inputDataShape": {
                    "description": "Parameters of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Parameter",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_IN\",\"properties\":{\"task\":{\"type\":\"string\",\"required\":true}}}}",
                    "type": "SQL_PARAM_IN"
                  },
                  "outputDataShape": {
                    "description": "Result of SQL [insert into todo (task) values (:#task)]",
                    "kind": "json-schema",
                    "metadata": {
                      "variant": "collection"
                    },
                    "name": "SQL Result",
                    "specification": "{\"type\":\"array\",\"$schema\":\"http://json-schema.org/schema#\",\"items\":{\"type\":\"object\",\"title\":\"SQL_PARAM_OUT\",\"properties\":{\"id\":{\"type\":\"integer\",\"required\":true}}}}",
                    "type": "SQL_PARAM_OUT"
                  },
                  "propertyDefinitionSteps": [
                    {
                      "name": "SQL statement",
                      "properties": {
                        "query": {
                          "defaultValue": "insert into todo (task) values (:#task)",
                          "deprecated": false,
                          "displayName": "SQL statement",
                          "group": "common",
                          "javaType": "java.lang.String",
                          "kind": "path",
                          "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                          "placeholder": "for example ':#MYPARAMNAME'",
                          "required": true,
                          "secret": false,
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "id": "sql-connector",
                "name": "Invoke SQL",
                "pattern": "To",
                "tags": [
                  "dynamic"
                ]
              },
              "configuredProperties": {
                "query": "insert into todo (task) values (:#task)"
              },
              "connection": {
                "configuredProperties": {
                  "password": "Â»ENC:a18045e3794e358ccfab47cdfcc55ac2dc96d8fb56443d5480a0bc1e88b2cff92f30777c337128789d1b7f34149ff1bd",
                  "schema": "sampledb",
                  "url": "jdbc:postgresql://syndesis-db:5432/sampledb",
                  "user": "sampledb"
                },
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Invoke SQL to obtain, store, update, or delete data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that starts with INSERT, SELECT, UPDATE or DELETE.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed. Can contain input parameters prefixed by ':#'.",
                                "placeholder": "for example ':#MYPARAMNAME'",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-connector",
                      "name": "Invoke SQL",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke SQL to obtain data.",
                      "descriptor": {
                        "componentScheme": "sql",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Enter a SQL statement that returns results.",
                            "name": "SQL statement",
                            "properties": {
                              "query": {
                                "deprecated": false,
                                "displayName": "SQL statement",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "SQL statement to be executed.",
                                "order": 1,
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "order": 2,
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-start-connector",
                      "name": "Periodic SQL invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "json-schema"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "common",
                                "javaType": "java.lang.String",
                                "kind": "property",
                                "labelHint": "Name of the stored procedure.",
                                "required": false,
                                "secret": false,
                                "type": "string"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored procedure template to perform.",
                                "required": false,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-connector",
                      "name": "Invoke stored procedure",
                      "pattern": "To",
                      "tags": [
                        "dynamic"
                      ]
                    },
                    {
                      "actionType": "connector",
                      "description": "Periodically invoke a stored procedure.",
                      "descriptor": {
                        "componentScheme": "sql-stored",
                        "connectorCustomizers": [
                          "io.syndesis.connector.sql.customizer.SqlStartStoredConnectorCustomizer"
                        ],
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "json-schema"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Select the stored procedure.",
                            "name": "Procedure name",
                            "properties": {
                              "procedureName": {
                                "componentProperty": true,
                                "deprecated": false,
                                "displayName": "Procedure name",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Name of the stored procedure.",
                                "required": true,
                                "secret": false,
                                "type": "string"
                              },
                              "schedulerExpression": {
                                "defaultValue": "60000",
                                "deprecated": false,
                                "displayName": "Period",
                                "group": "consumer",
                                "javaType": "long",
                                "kind": "parameter",
                                "labelHint": "Delay between scheduling (executing).",
                                "required": false,
                                "secret": false,
                                "type": "duration"
                              },
                              "template": {
                                "componentProperty": false,
                                "deprecated": false,
                                "displayName": "Template",
                                "group": "producer",
                                "javaType": "java.lang.String",
                                "kind": "path",
                                "labelHint": "Stored Procedure template to perform.",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "sql-stored-start-connector",
                      "name": "Periodic stored procedure invocation",
                      "pattern": "From",
                      "tags": [
                        "dynamic"
                      ]
                    }
                  ],
                  "connectorCustomizers": [
                    "io.syndesis.connector.sql.customizer.DataSourceCustomizer"
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-sql:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    },
                    {
                      "id": "jdbc-driver",
                      "type": "EXTENSION_TAG"
                    }
                  ],
                  "description": "Subscribe for and publish messages.",
                  "icon": "assets:sql.svg",
                  "id": "sql",
                  "name": "Database",
                  "properties": {
                    "password": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Password",
                      "group": "security",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common,security",
                      "labelHint": "Password for the database connection.",
                      "order": 3,
                      "required": true,
                      "secret": true,
                      "type": "string"
                    },
                    "schema": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Schema",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "label": "common",
                      "labelHint": "Database schema.",
                      "order": 4,
                      "required": false,
                      "secret": false,
                      "type": "string"
                    },
                    "url": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Connection URL",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "JDBC URL of the database.",
                      "order": 1,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    },
                    "user": {
                      "componentProperty": true,
                      "deprecated": false,
                      "displayName": "Username",
                      "group": "common",
                      "javaType": "java.lang.String",
                      "kind": "property",
                      "labelHint": "Username for the database connection.",
                      "order": 2,
                      "required": true,
                      "secret": false,
                      "type": "string"
                    }
                  },
                  "tags": [
                    "verifier"
                  ],
                  "version": 132
                },
                "connectorId": "sql",
                "description": "Connection to SampleDB",
                "icon": "assets:sql.svg",
                "id": "5",
                "isDerived": false,
                "name": "PostgresDB",
                "tags": [
                  "sampledb"
                ],
                "uses": 0
              },
              "id": "-LhA3VmE6jz-AhZCqHG3",
              "metadata": {
                "configured": "true"
              },
              "stepKind": "endpoint"
            },
            {
              "action": {
                "actionType": "connector",
                "description": "End action of Syndesis integrations flow",
                "descriptor": {
                  "componentScheme": "bean",
                  "configuredProperties": {
                    "beanName": "io.syndesis.connector.flow.NoOpBean",
                    "method": "process"
                  },
                  "inputDataShape": {
                    "kind": "any"
                  },
                  "outputDataShape": {
                    "kind": "none"
                  }
                },
                "id": "io.syndesis:flow-end",
                "name": "Flow End",
                "pattern": "To"
              },
              "connection": {
                "connector": {
                  "actions": [
                    {
                      "actionType": "connector",
                      "description": "Start a Syndesis integration flow",
                      "descriptor": {
                        "componentScheme": "direct",
                        "inputDataShape": {
                          "kind": "none"
                        },
                        "outputDataShape": {
                          "kind": "any"
                        },
                        "propertyDefinitionSteps": [
                          {
                            "description": "Flow start configuration",
                            "name": "configuration",
                            "properties": {
                              "name": {
                                "componentProperty": false,
                                "deprecated": false,
                                "description": "The flow identifier used to route messages to",
                                "displayName": "Flow ID",
                                "javaType": "String",
                                "kind": "parameter",
                                "required": true,
                                "secret": false,
                                "type": "hidden"
                              }
                            }
                          }
                        ]
                      },
                      "id": "io.syndesis:flow-start",
                      "name": "Flow Start",
                      "pattern": "From"
                    },
                    {
                      "actionType": "connector",
                      "description": "End action of Syndesis integrations flow",
                      "descriptor": {
                        "componentScheme": "bean",
                        "configuredProperties": {
                          "beanName": "io.syndesis.connector.flow.NoOpBean",
                          "method": "process"
                        },
                        "inputDataShape": {
                          "kind": "any"
                        },
                        "outputDataShape": {
                          "kind": "none"
                        }
                      },
                      "id": "io.syndesis:flow-end",
                      "name": "Flow End",
                      "pattern": "To"
                    }
                  ],
                  "dependencies": [
                    {
                      "id": "io.syndesis.connector:connector-flow:1.7-SNAPSHOT",
                      "type": "MAVEN"
                    }
                  ],
                  "description": "Connect with flows using direct endpoint",
                  "icon": "assets:flow.svg",
                  "id": "flow",
                  "metadata": {
                    "hide-from-connection-pages": "true",
                    "hide-from-step-select": "true"
                  },
                  "name": "Flow",
                  "version": 11
                },
                "connectorId": "flow",
                "description": "Connect with different flows using direct endpoint",
                "icon": "assets:flow.svg",
                "id": "flow",
                "isDerived": false,
                "metadata": {
                  "hide-from-connection-pages": "true",
                  "hide-from-step-select": "true"
                },
                "name": "Flow",
                "uses": 0
              },
              "id": "-LhA2IV36jz-AhZCqHFu",
              "metadata": {
                "configured": "true"
              },
              "name": "Flow end",
              "stepKind": "endpoint"
            }
          ],
          "type": "ALTERNATE"
        }
      ],
      "id": "i-LhA2DmMkkzyaevLTNNLz",
      "name": "ConditionalFlows",
      "tags": [
        "flow",
        "sql",
        "webhook"
      ],
      "updatedAt": 1560343705333,
      "version": 10
    }
  }
}
