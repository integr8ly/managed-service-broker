{
  "actions": [
    {
      "actionType": "connector",
      "description": "Obtain messages from the email account that this connection is authorized to access.",
      "descriptor": {
        "connectorCustomizers": [
          "io.syndesis.connector.email.customizer.EMailReceiveCustomizer"
        ],
        "connectorFactory": "io.syndesis.connector.email.component.EMailComponentFactory",
        "inputDataShape": {
          "kind": "none"
        },
        "outputDataShape": {
          "kind": "java",
          "name": "EmailMessage",
          "type": "io.syndesis.connector.email.model.EMailMessageModel"
        },
        "propertyDefinitionSteps": [
          {
            "description": "Specify the emails that you want to obtain.",
            "name": "Obtain Messages from Email",
            "properties": {
              "delay": {
                "componentProperty": false,
                "defaultValue": 5000,
                "deprecated": false,
                "displayName": "Delay",
                "group": "scheduler",
                "javaType": "long",
                "kind": "parameter",
                "label": "consumer,scheduler",
                "labelHint": "Time interval between polls for emails.",
                "order": "3",
                "required": false,
                "secret": false,
                "tags": [],
                "type": "duration"
              },
              "folderName": {
                "componentProperty": false,
                "deprecated": false,
                "displayName": "Folder",
                "group": "common",
                "javaType": "java.lang.String",
                "kind": "parameter",
                "label": "common",
                "labelHint": "Folder to poll for email messages (leave black to use INBOX)",
                "order": "1",
                "required": false,
                "secret": false,
                "tags": [],
                "type": "string"
              },
              "maxResults": {
                "defaultValue": "5",
                "deprecated": false,
                "displayName": "Maximum Emails",
                "group": "consumer",
                "javaType": "int",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "Maximum number of emails to return (use -1 to fetch all of them).",
                "order": "4",
                "required": false,
                "secret": false,
                "type": "integer"
              },
              "unseenOnly": {
                "componentProperty": false,
                "defaultValue": false,
                "deprecated": false,
                "displayName": "Unseen Only",
                "group": "common",
                "javaType": "boolean",
                "kind": "parameter",
                "label": "consumer",
                "labelHint": "If true, only fetch unseen messages.",
                "order": "2",
                "required": false,
                "secret": false,
                "tags": [],
                "type": "boolean"
              }
            }
          }
        ]
      },
      "id": "io.syndesis:email-read-connector",
      "name": "Receive Email",
      "pattern": "From"
    }
  ],
  "componentScheme": "email-receive",
  "configuredProperties": {},
  "dependencies": [
    {
      "id": "@project.groupId@:@project.artifactId@:@project.version@",
      "type": "MAVEN"
    }
  ],
  "description": "Receive email messages from an imap or pop3 account.",
  "icon": "assets:email-receive.svg",
  "id": "email-receive",
  "metadata": {},
  "name": "Receive Email (imap or pop3)",
  "properties": {
    "host": {
      "componentProperty": true,
      "deprecated": false,
      "description": "The hostname of the email server.",
      "displayName": "Email Host Name",
      "group": "common",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "common",
      "order": "2",
      "required": true,
      "secret": false,
      "type": "string"
    },
    "password": {
      "componentProperty": true,
      "deprecated": false,
      "displayName": "Password",
      "group": "security",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "common,security",
      "labelHint": "Specify the user name for the email account that this connection is authorized to access.",
      "order": "5",
      "required": true,
      "secret": true,
      "type": "string"
    },
    "port": {
      "componentProperty": true,
      "deprecated": false,
      "description": "The port of the email server.",
      "displayName": "Email Server Port Number",
      "group": "common",
      "javaType": "java.lang.Integer",
      "kind": "parameter",
      "label": "common",
      "order": "3",
      "required": true,
      "secret": false,
      "type": "integer"
    },
    "protocol": {
      "componentProperty": true,
      "defaultValue": "imap",
      "deprecated": false,
      "displayName": "Protocol",
      "enum": [
        {
          "label": "imap",
          "value": "imap"
        },
        {
          "label": "pop3",
          "value": "pop3"
        }
      ],
      "group": "common",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "labelHint": "The type of the email server, ie. imap or pop3",
      "order": "1",
      "required": true,
      "secret": false,
      "type": "string"
    },
    "secureType": {
      "componentProperty": true,
      "defaultValue": "None",
      "deprecated": false,
      "displayName": "Security Method",
      "enum": [
        {
          "label": "None",
          "value": "None"
        },
        {
          "label": "StartTLS",
          "value": "StartTLS"
        },
        {
          "label": "SSL / TLS",
          "value": "SSL/TLS"
        }
      ],
      "group": "security",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "security",
      "labelHint": "Specify what security protocol (if any) the connection requires",
      "order": "6",
      "required": false,
      "secret": false,
      "type": "string"
    },
    "serverCertificate": {
      "componentProperty": true,
      "deprecated": false,
      "description": "If the SSL email server is internal and possesses a self-signed certificate then enable SSL by adding the certificate here.",
      "displayName": "Server Certificate",
      "group": "security",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "common,security",
      "order": "7",
      "relation": [
        {
          "action": "DISABLE",
          "when": [
            {
              "id": "secureType",
              "value": "None"
            }
          ]
        }
      ],
      "required": false,
      "secret": false,
      "type": "textarea"
    },
    "username": {
      "componentProperty": true,
      "deprecated": false,
      "displayName": "User Name",
      "group": "security",
      "javaType": "java.lang.String",
      "kind": "parameter",
      "label": "common,security",
      "labelHint": "Specify the user name for the email account that this connection is authorized to access.",
      "order": "4",
      "required": true,
      "secret": false,
      "type": "string"
    }
  },
  "tags": [
    "verifier"
  ]
}
